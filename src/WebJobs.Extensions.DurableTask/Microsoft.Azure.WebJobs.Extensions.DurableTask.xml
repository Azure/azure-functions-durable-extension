<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Azure.WebJobs.Extensions.DurableTask</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.AzureStorageDurabilityProvider">
            <summary>
            The Azure Storage implementation of additional methods not required by IOrchestrationService.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.AzureStorageDurabilityProvider.ConnectionName">
            <summary>
            The app setting containing the Azure Storage connection string.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.AzureStorageDurabilityProvider.GetAllOrchestrationStates(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.AzureStorageDurabilityProvider.GetOrchestrationStateWithInputsAsync(System.String,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.AzureStorageDurabilityProvider.RewindAsync(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.AzureStorageDurabilityProvider.GetAllOrchestrationStatesWithFilters(System.DateTime,System.Nullable{System.DateTime},System.Collections.Generic.IEnumerable{Microsoft.Azure.WebJobs.Extensions.DurableTask.OrchestrationRuntimeStatus},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.AzureStorageDurabilityProvider.RetrieveSerializedEntityState(Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityId,Newtonsoft.Json.JsonSerializerSettings)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.AzureStorageDurabilityProvider.PurgeInstanceHistoryByInstanceId(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.AzureStorageDurabilityProvider.PurgeHistoryByFilters(System.DateTime,System.Nullable{System.DateTime},System.Collections.Generic.IEnumerable{DurableTask.Core.OrchestrationStatus})">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.AzureStorageDurabilityProvider.GetOrchestrationStateWithPagination(Microsoft.Azure.WebJobs.Extensions.DurableTask.OrchestrationStatusQueryCondition,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableActivityContext">
            <summary>
            The default parameter type for activity functions.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableActivityContext.Microsoft#Azure#WebJobs#Extensions#DurableTask#IDurableActivityContext#InstanceId">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableActivityContext.GetRawInput">
            <summary>
            Returns the input of the task activity in its raw JSON string value.
            </summary>
            <returns>
            The raw JSON-formatted activity input as a string value.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableActivityContext.GetInputAsJson">
            <summary>
            Gets the input of the current activity function instance as a <c>JToken</c>.
            </summary>
            <returns>
            The parsed <c>JToken</c> representation of the activity input.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableActivityContext.Microsoft#Azure#WebJobs#Extensions#DurableTask#IDurableActivityContext#GetInput``1">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableActivityContext.SetOutput(System.Object)">
            <summary>
            Sets the JSON-serializeable output of the activity function.
            </summary>
            <remarks>
            If this method is not called explicitly, the return value of the activity function is used as the output.
            </remarks>
            <param name="output">
            The JSON-serializeable value to use as the activity function output.
            </param>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableClient">
            <summary>
            Client for starting, querying, terminating, and raising events to orchestration instances.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableClient.Microsoft#Azure#WebJobs#Extensions#DurableTask#IDurableOrchestrationClient#TaskHubName">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableClient.Microsoft#Azure#WebJobs#Extensions#DurableTask#IDurableOrchestrationClient#CreateCheckStatusResponse(System.Net.Http.HttpRequestMessage,System.String,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableClient.Microsoft#Azure#WebJobs#Extensions#DurableTask#IDurableOrchestrationClient#CreateCheckStatusResponse(Microsoft.AspNetCore.Http.HttpRequest,System.String,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableClient.Microsoft#Azure#WebJobs#Extensions#DurableTask#IDurableOrchestrationClient#CreateHttpManagementPayload(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableClient.Microsoft#Azure#WebJobs#Extensions#DurableTask#IDurableOrchestrationClient#WaitForCompletionOrCreateCheckStatusResponseAsync(System.Net.Http.HttpRequestMessage,System.String,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableClient.Microsoft#Azure#WebJobs#Extensions#DurableTask#IDurableOrchestrationClient#WaitForCompletionOrCreateCheckStatusResponseAsync(Microsoft.AspNetCore.Http.HttpRequest,System.String,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableClient.Microsoft#Azure#WebJobs#Extensions#DurableTask#IDurableOrchestrationClient#StartNewAsync``1(System.String,System.String,``0)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableClient.Microsoft#Azure#WebJobs#Extensions#DurableTask#IDurableOrchestrationClient#RaiseEventAsync(System.String,System.String,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableClient.Microsoft#Azure#WebJobs#Extensions#DurableTask#IDurableOrchestrationClient#RaiseEventAsync(System.String,System.String,System.String,System.Object,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableClient.Microsoft#Azure#WebJobs#Extensions#DurableTask#IDurableEntityClient#SignalEntityAsync(Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityId,System.String,System.Object,System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableClient.Microsoft#Azure#WebJobs#Extensions#DurableTask#IDurableEntityClient#SignalEntityAsync(Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityId,System.DateTime,System.String,System.Object,System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableClient.Microsoft#Azure#WebJobs#Extensions#DurableTask#IDurableOrchestrationClient#TerminateAsync(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableClient.Microsoft#Azure#WebJobs#Extensions#DurableTask#IDurableOrchestrationClient#RewindAsync(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableClient.Microsoft#Azure#WebJobs#Extensions#DurableTask#IDurableOrchestrationClient#GetStatusAsync(System.String,System.Boolean,System.Boolean,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableClient.Microsoft#Azure#WebJobs#Extensions#DurableTask#IDurableOrchestrationClient#GetStatusAsync(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Collections.Generic.IEnumerable{Microsoft.Azure.WebJobs.Extensions.DurableTask.OrchestrationRuntimeStatus},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableClient.Microsoft#Azure#WebJobs#Extensions#DurableTask#IDurableOrchestrationClient#PurgeInstanceHistoryAsync(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableClient.Microsoft#Azure#WebJobs#Extensions#DurableTask#IDurableOrchestrationClient#PurgeInstanceHistoryAsync(System.DateTime,System.Nullable{System.DateTime},System.Collections.Generic.IEnumerable{DurableTask.Core.OrchestrationStatus})">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableClient.Microsoft#Azure#WebJobs#Extensions#DurableTask#IDurableOrchestrationClient#ListInstancesAsync(Microsoft.Azure.WebJobs.Extensions.DurableTask.OrchestrationStatusQueryCondition,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableClient.Microsoft#Azure#WebJobs#Extensions#DurableTask#IDurableEntityClient#ListEntitiesAsync(Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityQuery,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableClient.Microsoft#Azure#WebJobs#Extensions#DurableTask#IDurableOrchestrationClient#StartNewAsync(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableClient.Microsoft#Azure#WebJobs#Extensions#DurableTask#IDurableOrchestrationClient#StartNewAsync``1(System.String,``0)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableClient.Microsoft#Azure#WebJobs#Extensions#DurableTask#IDurableEntityClient#SignalEntityAsync``1(System.String,System.Action{``0})">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableClient.Microsoft#Azure#WebJobs#Extensions#DurableTask#IDurableEntityClient#SignalEntityAsync``1(System.String,System.DateTime,System.Action{``0})">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableClient.Microsoft#Azure#WebJobs#Extensions#DurableTask#IDurableEntityClient#SignalEntityAsync``1(Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityId,System.Action{``0})">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableClient.Microsoft#Azure#WebJobs#Extensions#DurableTask#IDurableEntityClient#SignalEntityAsync``1(Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityId,System.DateTime,System.Action{``0})">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableCommonContext">
            <summary>
            Common functionality used by both <see cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableOrchestrationContext"/>
            and <see cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableEntityContext"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableEntityContext">
            <summary>
            Context object passed to application code executing entity operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableEntityContext.Microsoft#Azure#WebJobs#Extensions#DurableTask#IDurableEntityContext#SignalEntity``1(System.String,System.Action{``0})">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableEntityContext.Microsoft#Azure#WebJobs#Extensions#DurableTask#IDurableEntityContext#SignalEntity``1(System.String,System.DateTime,System.Action{``0})">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableEntityContext.Microsoft#Azure#WebJobs#Extensions#DurableTask#IDurableEntityContext#SignalEntity``1(Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityId,System.Action{``0})">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableOrchestrationContext">
            <summary>
            Parameter data for orchestration bindings that can be used to schedule function-based activities.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableOrchestrationContext.Microsoft#Azure#WebJobs#Extensions#DurableTask#IDurableOrchestrationContext#CurrentUtcDateTime">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableOrchestrationContext.Microsoft#Azure#WebJobs#Extensions#DurableTask#IDurableOrchestrationContext#IsReplaying">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableOrchestrationContext.Microsoft#Azure#WebJobs#Extensions#DurableTask#IDurableOrchestrationContext#Name">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableOrchestrationContext.Microsoft#Azure#WebJobs#Extensions#DurableTask#IDurableOrchestrationContext#InstanceId">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableOrchestrationContext.Microsoft#Azure#WebJobs#Extensions#DurableTask#IDurableOrchestrationContext#ParentInstanceId">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableOrchestrationContext.GetRawInput">
            <summary>
            Returns the orchestrator function input as a raw JSON string value.
            </summary>
            <returns>
            The raw JSON-formatted orchestrator function input.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableOrchestrationContext.GetInputAsJson">
            <summary>
            Gets the input of the current orchestrator function instance as a <c>JToken</c>.
            </summary>
            <returns>
            The parsed <c>JToken</c> representation of the orchestrator function input.
            </returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableOrchestrationContext.Microsoft#Azure#WebJobs#Extensions#DurableTask#IDurableOrchestrationContext#GetInput``1">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableOrchestrationContext.SetOutput(System.Object)">
            <summary>
            Sets the JSON-serializeable output of the current orchestrator function.
            </summary>
            <remarks>
            If this method is not called explicitly, the return value of the orchestrator function is used as the output.
            </remarks>
            <param name="output">The JSON-serializeable value to use as the orchestrator function output.</param>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableOrchestrationContext.Microsoft#Azure#WebJobs#Extensions#DurableTask#IDurableOrchestrationContext#SetCustomStatus(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableOrchestrationContext.Microsoft#Azure#WebJobs#Extensions#DurableTask#IDurableOrchestrationContext#CallSubOrchestratorAsync``1(System.String,System.String,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableOrchestrationContext.Microsoft#Azure#WebJobs#Extensions#DurableTask#IDurableOrchestrationContext#CallSubOrchestratorWithRetryAsync``1(System.String,Microsoft.Azure.WebJobs.Extensions.DurableTask.RetryOptions,System.String,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableOrchestrationContext.Microsoft#Azure#WebJobs#Extensions#DurableTask#IDurableOrchestrationContext#CreateTimer``1(System.DateTime,``0,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableOrchestrationContext.Microsoft#Azure#WebJobs#Extensions#DurableTask#IDurableOrchestrationContext#WaitForExternalEvent``1(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableOrchestrationContext.Microsoft#Azure#WebJobs#Extensions#DurableTask#IDurableOrchestrationContext#WaitForExternalEvent``1(System.String,System.TimeSpan,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableOrchestrationContext.Microsoft#Azure#WebJobs#Extensions#DurableTask#IDurableOrchestrationContext#WaitForExternalEvent``1(System.String,System.TimeSpan,``0,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableOrchestrationContext.Microsoft#Azure#WebJobs#Extensions#DurableTask#IDurableOrchestrationContext#CallActivityAsync``1(System.String,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableOrchestrationContext.Microsoft#Azure#WebJobs#Extensions#DurableTask#IDurableOrchestrationContext#CallActivityWithRetryAsync``1(System.String,Microsoft.Azure.WebJobs.Extensions.DurableTask.RetryOptions,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableOrchestrationContext.Microsoft#Azure#WebJobs#Extensions#DurableTask#IDurableOrchestrationContext#IsLocked(System.Collections.Generic.IReadOnlyList{Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityId}@)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableOrchestrationContext.Microsoft#Azure#WebJobs#Extensions#DurableTask#IDurableOrchestrationContext#NewGuid">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableOrchestrationContext.Microsoft#Azure#WebJobs#Extensions#DurableTask#IDurableOrchestrationContext#SignalEntity(Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityId,System.String,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableOrchestrationContext.Microsoft#Azure#WebJobs#Extensions#DurableTask#IDurableOrchestrationContext#SignalEntity(Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityId,System.DateTime,System.String,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableOrchestrationContext.Microsoft#Azure#WebJobs#Extensions#DurableTask#IDurableOrchestrationContext#StartNewOrchestration(System.String,System.Object,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableOrchestrationContext.Microsoft#Azure#WebJobs#Extensions#DurableTask#IDurableOrchestrationContext#ContinueAsNew(System.Object,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableOrchestrationContext.Microsoft#Azure#WebJobs#Extensions#DurableTask#IDurableOrchestrationContext#CallEntityAsync``1(Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityId,System.String,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableOrchestrationContext.Microsoft#Azure#WebJobs#Extensions#DurableTask#IDurableOrchestrationContext#CallEntityAsync(Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityId,System.String,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableOrchestrationContext.Microsoft#Azure#WebJobs#Extensions#DurableTask#IDurableOrchestrationContext#LockAsync(Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityId[])">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableOrchestrationContext.Microsoft#Azure#WebJobs#Extensions#DurableTask#IDurableOrchestrationContext#CallEntityAsync``1(Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityId,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableOrchestrationContext.Microsoft#Azure#WebJobs#Extensions#DurableTask#IDurableOrchestrationContext#CallEntityAsync(Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityId,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableOrchestrationContext.Microsoft#Azure#WebJobs#Extensions#DurableTask#IDurableOrchestrationContext#CallSubOrchestratorAsync(System.String,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableOrchestrationContext.Microsoft#Azure#WebJobs#Extensions#DurableTask#IDurableOrchestrationContext#CallSubOrchestratorAsync(System.String,System.String,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableOrchestrationContext.Microsoft#Azure#WebJobs#Extensions#DurableTask#IDurableOrchestrationContext#CallSubOrchestratorWithRetryAsync(System.String,Microsoft.Azure.WebJobs.Extensions.DurableTask.RetryOptions,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableOrchestrationContext.Microsoft#Azure#WebJobs#Extensions#DurableTask#IDurableOrchestrationContext#CallSubOrchestratorWithRetryAsync(System.String,Microsoft.Azure.WebJobs.Extensions.DurableTask.RetryOptions,System.String,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableOrchestrationContext.Microsoft#Azure#WebJobs#Extensions#DurableTask#IDurableOrchestrationContext#CallSubOrchestratorWithRetryAsync``1(System.String,Microsoft.Azure.WebJobs.Extensions.DurableTask.RetryOptions,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableOrchestrationContext.Microsoft#Azure#WebJobs#Extensions#DurableTask#IDurableOrchestrationContext#CreateTimer(System.DateTime,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableOrchestrationContext.Microsoft#Azure#WebJobs#Extensions#DurableTask#IDurableOrchestrationContext#WaitForExternalEvent(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableOrchestrationContext.Microsoft#Azure#WebJobs#Extensions#DurableTask#IDurableOrchestrationContext#WaitForExternalEvent(System.String,System.TimeSpan,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableOrchestrationContext.Microsoft#Azure#WebJobs#Extensions#DurableTask#IDurableOrchestrationContext#CallActivityAsync(System.String,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableOrchestrationContext.Microsoft#Azure#WebJobs#Extensions#DurableTask#IDurableOrchestrationContext#CallActivityWithRetryAsync(System.String,Microsoft.Azure.WebJobs.Extensions.DurableTask.RetryOptions,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableOrchestrationContext.Microsoft#Azure#WebJobs#Extensions#DurableTask#IDurableOrchestrationContext#CreateEntityProxy``1(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableOrchestrationContext.Microsoft#Azure#WebJobs#Extensions#DurableTask#IDurableOrchestrationContext#CreateEntityProxy``1(Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityId)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableContextExtensions">
            <summary>
            Defines convenient overloads for calling the context methods, for all the contexts.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableContextExtensions.CreateReplaySafeLogger(Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationContext,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Returns an instance of ILogger that is replay safe, ensuring the logger logs only when the orchestrator
            is not replaying that line of code.
            </summary>
            <param name="context">The context object.</param>
            <param name="logger">An instance of ILogger.</param>
            <returns>An instance of a replay safe ILogger.</returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableActivityContext">
            <summary>
            Provides functionality available to durable activities.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableActivityContext.InstanceId">
            <summary>
            Gets the instance ID of the currently executing orchestration.
            </summary>
            <remarks>
            The instance ID is generated and fixed when the orchestrator function is scheduled. It can be either
            auto-generated, in which case it is formatted as a GUID, or it can be user-specified with any format.
            </remarks>
            <value>
            The ID of the current orchestration instance.
            </value>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableActivityContext.GetInput``1">
            <summary>
            Gets the input of the current activity function as a deserialized value.
            </summary>
            <typeparam name="T">Any data contract type that matches the JSON input.</typeparam>
            <returns>The deserialized input value.</returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableClient">
            <summary>
            Provides functionality available to durable orchestration and entity clients.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableClient.TaskHubName">
            <summary>
            Gets the name of the task hub configured on this client instance.
            </summary>
            <value>
            The name of the task hub.
            </value>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableEntityClient">
            <summary>
            Provides functionality available to durable entity clients.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableEntityClient.TaskHubName">
            <summary>
            Gets the name of the task hub configured on this client instance.
            </summary>
            <value>
            The name of the task hub.
            </value>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableEntityClient.SignalEntityAsync(Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityId,System.String,System.Object,System.String,System.String)">
            <summary>
            Signals an entity to perform an operation.
            </summary>
            <param name="entityId">The target entity.</param>
            <param name="operationName">The name of the operation.</param>
            <param name="operationInput">The input for the operation.</param>
            <param name="taskHubName">The TaskHubName of the target entity.</param>
            <param name="connectionName">The name of the connection string associated with <paramref name="taskHubName"/>.</param>
            <returns>A task that completes when the message has been reliably enqueued.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableEntityClient.SignalEntityAsync(Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityId,System.DateTime,System.String,System.Object,System.String,System.String)">
            <summary>
            Signals an entity to perform an operation, at a specified time.
            </summary>
            <param name="entityId">The target entity.</param>
            <param name="scheduledTimeUtc">The time at which to start the operation.</param>
            <param name="operationName">The name of the operation.</param>
            <param name="operationInput">The input for the operation.</param>
            <param name="taskHubName">The TaskHubName of the target entity.</param>
            <param name="connectionName">The name of the connection string associated with <paramref name="taskHubName"/>.</param>
            <returns>A task that completes when the message has been reliably enqueued.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableEntityClient.SignalEntityAsync``1(System.String,System.Action{``0})">
            <summary>
            Signals an entity to perform an operation.
            </summary>
            <typeparam name="TEntityInterface">Entity interface.</typeparam>
            <param name="entityKey">The target entity key.</param>
            <param name="operation">A delegate that performs the desired operation on the entity.</param>
            <returns>A task that completes when the message has been reliably enqueued.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableEntityClient.SignalEntityAsync``1(System.String,System.DateTime,System.Action{``0})">
            <summary>
            Signals an entity to perform an operation, at a specified time.
            </summary>
            <typeparam name="TEntityInterface">Entity interface.</typeparam>
            <param name="entityKey">The target entity key.</param>
            <param name="scheduledTimeUtc">The time at which to start the operation.</param>
            <param name="operation">A delegate that performs the desired operation on the entity.</param>
            <returns>A task that completes when the message has been reliably enqueued.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableEntityClient.SignalEntityAsync``1(Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityId,System.Action{``0})">
            <summary>
            Signals an entity to perform an operation.
            </summary>
            <typeparam name="TEntityInterface">Entity interface.</typeparam>
            <param name="entityId">The target entity.</param>
            <param name="operation">A delegate that performs the desired operation on the entity.</param>
            <returns>A task that completes when the message has been reliably enqueued.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableEntityClient.SignalEntityAsync``1(Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityId,System.DateTime,System.Action{``0})">
            <summary>
            Signals an entity to perform an operation, at a specified time.
            </summary>
            <typeparam name="TEntityInterface">Entity interface.</typeparam>
            <param name="entityId">The target entity.</param>
            <param name="scheduledTimeUtc">The time at which to start the operation.</param>
            <param name="operation">A delegate that performs the desired operation on the entity.</param>
            <returns>A task that completes when the message has been reliably enqueued.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableEntityClient.ReadEntityStateAsync``1(Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityId,System.String,System.String)">
            <summary>
            Tries to read the current state of an entity. Returns default(<typeparamref name="T"/>) if the entity does not
            exist, or if the JSON-serialized state of the entity is larger than 16KB.
            </summary>
            <typeparam name="T">The JSON-serializable type of the entity.</typeparam>
            <param name="entityId">The target entity.</param>
            <param name="taskHubName">The TaskHubName of the target entity.</param>
            <param name="connectionName">The name of the connection string associated with <paramref name="taskHubName"/>.</param>
            <returns>a response containing the current state of the entity.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableEntityClient.ListEntitiesAsync(Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityQuery,System.Threading.CancellationToken)">
            <summary>
            Gets the status of all entity instances with paging that match the specified query conditions.
            </summary>
            <param name="query">Return entity instances that match the specified query conditions.</param>
            <param name="cancellationToken">Cancellation token that can be used to cancel the query operation.</param>
            <returns>Returns a page of entity instances and a continuation token for fetching the next page.</returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableEntityContext">
            <summary>
            Provides functionality for application code implementing an entity operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableEntityContext.EntityName">
            <summary>
            Gets the name of the currently executing entity.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableEntityContext.EntityKey">
            <summary>
            Gets the key of the currently executing entity.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableEntityContext.EntityId">
            <summary>
            Gets the id of the currently executing entity.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableEntityContext.OperationName">
            <summary>
            Gets the name of the operation that was called.
            </summary>
            <remarks>
            An operation invocation on an entity includes an operation name, which states what
            operation to perform, and optionally an operation input.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableEntityContext.FunctionBindingContext">
            <summary>
            Contains function invocation context to assist with dependency injection at Entity construction time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableEntityContext.HasState">
            <summary>
            Whether this entity has a state.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableEntityContext.GetState``1(System.Func{``0})">
            <summary>
            Gets the current state of this entity, for reading and/or updating.
            If this entity has no state yet, creates it.
            </summary>
            <typeparam name="TState">The JSON-serializable type of the entity state.</typeparam>
            <param name="initializer">Provides an initial value to use for the state, instead of default(<typeparamref name="TState"/>).</param>
            <returns>The current state of this entity.</returns>
            <exception cref="T:System.InvalidCastException">If the current state has an incompatible type.</exception>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableEntityContext.SetState(System.Object)">
            <summary>
            Sets the current state of this entity.
            </summary>
            <param name="state">The JSON-serializable state of the entity.</param>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableEntityContext.DeleteState">
            <summary>
            Deletes the state of this entity.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableEntityContext.GetInput``1">
            <summary>
            Gets the input for this operation, as a deserialized value.
            </summary>
            <typeparam name="TInput">The JSON-serializable type used for the operation input.</typeparam>
            <returns>The operation input, or default(<typeparamref name="TInput"/>) if none.</returns>
            <remarks>
            An operation invocation on an entity includes an operation name, which states what
            operation to perform, and optionally an operation input.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableEntityContext.GetInput(System.Type)">
            <summary>
            Gets the input for this operation, as a deserialized value.
            </summary>
            <param name="inputType">The JSON-serializable type used for the operation input.</param>
            <returns>The operation input, or default(<paramref name="inputType"/>) if none.</returns>
            <remarks>
            An operation invocation on an entity includes an operation name, which states what
            operation to perform, and optionally an operation input.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableEntityContext.Return(System.Object)">
            <summary>
            Returns the given result to the caller of this operation.
            </summary>
            <param name="result">the result to return.</param>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableEntityContext.SignalEntity(Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityId,System.String,System.Object)">
            <summary>
            Signals an entity to perform an operation, without waiting for a response. Any result or exception is ignored (fire and forget).
            </summary>
            <param name="entity">The target entity.</param>
            <param name="operationName">The name of the operation.</param>
            <param name="operationInput">The operation input.</param>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableEntityContext.SignalEntity(Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityId,System.DateTime,System.String,System.Object)">
            <summary>
            Signals an entity to perform an operation, at a specified time. Any result or exception is ignored (fire and forget).
            </summary>
            <param name="entity">The target entity.</param>
            <param name="scheduledTimeUtc">The time at which to start the operation.</param>
            <param name="operationName">The name of the operation.</param>
            <param name="operationInput">The input for the operation.</param>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableEntityContext.SignalEntity``1(System.String,System.Action{``0})">
            <summary>
            Signals an entity to perform an operation.
            </summary>
            <param name="entityKey">The target entity key.</param>
            <param name="operation">A delegate that performs the desired operation on the entity.</param>
            <typeparam name="TEntityInterface">Entity interface.</typeparam>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableEntityContext.SignalEntity``1(System.String,System.DateTime,System.Action{``0})">
            <summary>
            Signals an entity to perform an operation, at a specified time.
            </summary>
            <param name="entityKey">The target entity key.</param>
            <param name="scheduledTimeUtc">The time at which to start the operation.</param>
            <param name="operation">A delegate that performs the desired operation on the entity.</param>
            <typeparam name="TEntityInterface">Entity interface.</typeparam>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableEntityContext.SignalEntity``1(Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityId,System.Action{``0})">
            <summary>
            Signals an entity to perform an operation.
            </summary>
            <param name="entityId">The target entity.</param>
            <param name="operation">A delegate that performs the desired operation on the entity.</param>
            <typeparam name="TEntityInterface">Entity interface.</typeparam>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableEntityContext.SignalEntity``1(Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityId,System.DateTime,System.Action{``0})">
            <summary>
            Signals an entity to perform an operation, at a specified time.
            </summary>
            <param name="entityId">The target entity.</param>
            <param name="scheduledTimeUtc">The time at which to start the operation.</param>
            <param name="operation">A delegate that performs the desired operation on the entity.</param>
            <typeparam name="TEntityInterface">Entity interface.</typeparam>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableEntityContext.StartNewOrchestration(System.String,System.Object,System.String)">
            <summary>
            Schedules a orchestration function named <paramref name="functionName"/> for execution./>.
            Any result or exception is ignored (fire and forget).
            </summary>
            <param name="functionName">The name of the orchestrator function to call.</param>
            <param name="input">the input to pass to the orchestrator function.</param>
            <param name="instanceId">optionally, an instance id for the orchestration. By default, a random GUID is used.</param>
            <exception cref="T:System.ArgumentException">
            The specified function does not exist, is disabled, or is not an orchestrator function.
            </exception>
            <returns>The instance id of the new orchestration.</returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationClient">
            <summary>
            Provides functionality available to durable orchestration clients.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationClient.TaskHubName">
            <summary>
            Gets the name of the task hub configured on this client instance.
            </summary>
            <value>
            The name of the task hub.
            </value>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationClient.CreateCheckStatusResponse(System.Net.Http.HttpRequestMessage,System.String,System.Boolean)">
            <summary>
            Creates an HTTP response that is useful for checking the status of the specified instance.
            </summary>
            <remarks>
            The payload of the returned <see cref="T:System.Net.Http.HttpResponseMessage"/> contains HTTP API URLs that can
            be used to query the status of the orchestration, raise events to the orchestration, or
            terminate the orchestration.
            </remarks>
            <param name="request">The HTTP request that triggered the current orchestration instance.</param>
            <param name="instanceId">The ID of the orchestration instance to check.</param>
            <param name="returnInternalServerErrorOnFailure">Optional parameter that configures the http response code returned. Defaults to <c>false</c>.
            If <c>true</c>, the returned http response code will be a 500 when the orchestrator is in a failed state, when <c>false</c> it will
            return 200.</param>
            <returns>An HTTP 202 response with a Location header and a payload containing instance control URLs.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationClient.CreateCheckStatusResponse(Microsoft.AspNetCore.Http.HttpRequest,System.String,System.Boolean)">
            <summary>
            Creates an HTTP response that is useful for checking the status of the specified instance.
            </summary>
            <remarks>
            The payload of the returned <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> contains HTTP API URLs that can
            be used to query the status of the orchestration, raise events to the orchestration, or
            terminate the orchestration.
            </remarks>
            <param name="request">The HTTP request that triggered the current orchestration instance.</param>
            <param name="instanceId">The ID of the orchestration instance to check.</param>
            <param name="returnInternalServerErrorOnFailure">Optional parameter that configures the http response code returned. Defaults to <c>false</c>.
            If <c>true</c>, the returned http response code will be a 500 when the orchestrator is in a failed state, when <c>false</c> it will
            return 200.</param>
            <returns>An HTTP 202 response with a Location header and a payload containing instance control URLs.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationClient.CreateHttpManagementPayload(System.String)">
            <summary>
            Creates a <see cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.HttpManagementPayload"/> object that contains status, terminate and send external event HTTP endpoints.
            </summary>
            <param name="instanceId">The ID of the orchestration instance to check.</param>
            <returns>Instance of the <see cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.HttpManagementPayload"/> class.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationClient.WaitForCompletionOrCreateCheckStatusResponseAsync(System.Net.Http.HttpRequestMessage,System.String,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
            <summary>
            Creates an HTTP response which either contains a payload of management URLs for a non-completed instance
            or contains the payload containing the output of the completed orchestration.
            </summary>
            <remarks>
            If the orchestration instance completes within the specified timeout, then the HTTP response payload will
            contain the output of the orchestration instance formatted as JSON. However, if the orchestration does not
            complete within the specified timeout, then the HTTP response will be identical to that of the
            <see cref="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationClient.CreateCheckStatusResponse(System.Net.Http.HttpRequestMessage,System.String,System.Boolean)"/> API.
            </remarks>
            <param name="request">The HTTP request that triggered the current function.</param>
            <param name="instanceId">The unique ID of the instance to check.</param>
            <param name="timeout">Total allowed timeout for output from the durable function. The default value is 10 seconds.</param>
            <param name="retryInterval">The timeout between checks for output from the durable function. The default value is 1 second.</param>
            <returns>An HTTP response which may include a 202 and location header or a 200 with the durable function output in the response body.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationClient.WaitForCompletionOrCreateCheckStatusResponseAsync(Microsoft.AspNetCore.Http.HttpRequest,System.String,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
            <summary>
            Creates an HTTP response which either contains a payload of management URLs for a non-completed instance
            or contains the payload containing the output of the completed orchestration.
            </summary>
            <remarks>
            If the orchestration instance completes within the specified timeout, then the HTTP response payload will
            contain the output of the orchestration instance formatted as JSON. However, if the orchestration does not
            complete within the specified timeout, then the HTTP response will be identical to that of the
            <see cref="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationClient.CreateCheckStatusResponse(Microsoft.AspNetCore.Http.HttpRequest,System.String,System.Boolean)"/> API.
            </remarks>
            <param name="request">The HTTP request that triggered the current function.</param>
            <param name="instanceId">The unique ID of the instance to check.</param>
            <param name="timeout">Total allowed timeout for output from the durable function. The default value is 10 seconds.</param>
            <param name="retryInterval">The timeout between checks for output from the durable function. The default value is 1 second.</param>
            <returns>An HTTP response which may include a 202 and location header or a 200 with the durable function output in the response body.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationClient.StartNewAsync(System.String,System.String)">
            <summary>
            Starts a new execution of the specified orchestrator function.
            </summary>
            <param name="orchestratorFunctionName">The name of the orchestrator function to start.</param>
            <param name="instanceId">The ID to use for the new orchestration instance.</param>
            <returns>A task that completes when the orchestration is started. The task contains the instance id of the started
            orchestratation instance.</returns>
            <exception cref="T:System.ArgumentException">
            The specified function does not exist, is disabled, or is not an orchestrator function.
            </exception>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationClient.StartNewAsync``1(System.String,``0)">
            <summary>
            Starts a new execution of the specified orchestrator function.
            </summary>
            <param name="orchestratorFunctionName">The name of the orchestrator function to start.</param>
            <param name="input">JSON-serializeable input value for the orchestrator function.</param>
            <typeparam name="T">The type of the input value for the orchestrator function.</typeparam>
            <returns>A task that completes when the orchestration is started. The task contains the instance id of the started
            orchestratation instance.</returns>
            <exception cref="T:System.ArgumentException">
            The specified function does not exist, is disabled, or is not an orchestrator function.
            </exception>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationClient.StartNewAsync``1(System.String,System.String,``0)">
            <summary>
            Starts a new instance of the specified orchestrator function.
            </summary>
            <remarks>
            If an orchestration instance with the specified ID already exists, the existing instance
            will be silently replaced by this new instance.
            </remarks>
            <param name="orchestratorFunctionName">The name of the orchestrator function to start.</param>
            <param name="instanceId">The ID to use for the new orchestration instance.</param>
            <param name="input">JSON-serializable input value for the orchestrator function.</param>
            <typeparam name="T">The type of the input value for the orchestrator function.</typeparam>
            <returns>A task that completes when the orchestration is started. The task contains the instance id of the started
            orchestratation instance.</returns>
            <exception cref="T:System.ArgumentException">
            The specified function does not exist, is disabled, or is not an orchestrator function.
            </exception>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationClient.RaiseEventAsync(System.String,System.String,System.Object)">
            <summary>
            Sends an event notification message to a waiting orchestration instance.
            </summary>
            <remarks>
            <para>
            In order to handle the event, the target orchestration instance must be waiting for an
            event named <paramref name="eventName"/> using the
            <see cref="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationContext.WaitForExternalEvent``1(System.String)"/> API.
            </para>
            </remarks>
            <exception cref="T:System.ArgumentException">The instance id does not corespond to a valid orchestration instance.</exception>
            <exception cref="T:System.InvalidOperationException">The orchestration instance with the provided instance id is not running.</exception>
            <param name="instanceId">The ID of the orchestration instance that will handle the event.</param>
            <param name="eventName">The name of the event.</param>
            <param name="eventData">The JSON-serializeable data associated with the event.</param>
            <returns>A task that completes when the event notification message has been enqueued.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationClient.RaiseEventAsync(System.String,System.String,System.String,System.Object,System.String)">
            <summary>
            Sends an event notification message to a waiting orchestration instance.
            </summary>
            <remarks>
            <para>
            In order to handle the event, the target orchestration instance must be waiting for an
            event named <paramref name="eventName"/> using the
            <see cref="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationContext.WaitForExternalEvent``1(System.String)"/> API.
            </para><para>
            If the specified instance is not found or not running, this operation will throw an exception.
            </para>
            </remarks>
            <exception cref="T:System.ArgumentException">The instance id does not corespond to a valid orchestration instance.</exception>
            <exception cref="T:System.InvalidOperationException">The orchestration instance with the provided instance id is not running.</exception>
            <param name="taskHubName">The TaskHubName of the orchestration that will handle the event.</param>
            <param name="instanceId">The ID of the orchestration instance that will handle the event.</param>
            <param name="eventName">The name of the event.</param>
            <param name="eventData">The JSON-serializeable data associated with the event.</param>
            <param name="connectionName">The name of the connection string associated with <paramref name="taskHubName"/>.</param>
            <returns>A task that completes when the event notification message has been enqueued.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationClient.TerminateAsync(System.String,System.String)">
            <summary>
            Terminates a running orchestration instance.
            </summary>
            <remarks>
            <para>
            A terminated instance will eventually transition into the <see cref="F:Microsoft.Azure.WebJobs.Extensions.DurableTask.OrchestrationRuntimeStatus.Terminated"/> state.
            However, this transition will not happen immediately. Rather, the terminate operation will be queued in the task hub
            along with other operations for that instance. You can use the <see cref="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationClient.GetStatusAsync(System.String,System.Boolean,System.Boolean,System.Boolean)"/>
            method to know when a terminated instance has actually reached the Terminated state.
            </para>
            <para>
            Terminating an orchestration instance has no effect on any in-flight activity function executions
            or sub-orchestrations that were started by the current orchestration instance.
            </para>
            </remarks>
            <exception cref="T:System.ArgumentException">The instance id does not corespond to a valid orchestration instance.</exception>
            <exception cref="T:System.InvalidOperationException">The orchestration instance with the provided instance id is not running.</exception>
            <param name="instanceId">The ID of the orchestration instance to terminate.</param>
            <param name="reason">The reason for terminating the orchestration instance.</param>
            <returns>A task that completes when the terminate message is enqueued if necessary.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationClient.RewindAsync(System.String,System.String)">
            <summary>
            Rewinds the specified failed orchestration instance with a reason.
            </summary>
            <param name="instanceId">The ID of the orchestration instance to rewind.</param>
            <param name="reason">The reason for rewinding the orchestration instance.</param>
            <returns>A task that completes when the rewind message is enqueued.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationClient.GetStatusAsync(System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Gets the status of the specified orchestration instance.
            </summary>
            <param name="instanceId">The ID of the orchestration instance to query.</param>
            <param name="showHistory">Boolean marker for including execution history in the response.</param>
            <param name="showHistoryOutput">Boolean marker for including input and output in the execution history response.</param>
            <param name="showInput">If set, fetch and return the input for the orchestration instance.</param>
            <returns>Returns a task which completes when the status has been fetched.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationClient.GetStatusAsync(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Collections.Generic.IEnumerable{Microsoft.Azure.WebJobs.Extensions.DurableTask.OrchestrationRuntimeStatus},System.Threading.CancellationToken)">
            <summary>
            Gets the status of all orchestration instances that match the specified conditions.
            </summary>
            <param name="createdTimeFrom">If specified, return orchestration instances which were created after this DateTime.</param>
            <param name="createdTimeTo">If specified, return orchestration instances which were created before this DateTime.</param>
            <param name="runtimeStatus">If specified, return orchestration instances which matches the runtimeStatus.</param>
            <param name="cancellationToken">If specified, this ancellation token can be used to cancel the status query operation.</param>
            <returns>Returns orchestration status for all instances.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationClient.PurgeInstanceHistoryAsync(System.String)">
            <summary>
            Purge the history for a concrete instance.
            </summary>
            <param name="instanceId">The ID of the orchestration instance to purge.</param>
            <returns>Returns an instance of <see cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.PurgeHistoryResult"/>.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationClient.PurgeInstanceHistoryAsync(System.DateTime,System.Nullable{System.DateTime},System.Collections.Generic.IEnumerable{DurableTask.Core.OrchestrationStatus})">
            <summary>
            Purge the orchestration history for instances that match the conditions.
            </summary>
            <param name="createdTimeFrom">Start creation time for querying instances for purging.</param>
            <param name="createdTimeTo">End creation time for querying instances for purging.</param>
            <param name="runtimeStatus">List of runtime status for querying instances for purging. Only Completed, Terminated, or Failed will be processed.</param>
            <returns>Returns an instance of <see cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.PurgeHistoryResult"/>.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationClient.GetStatusAsync(Microsoft.Azure.WebJobs.Extensions.DurableTask.OrchestrationStatusQueryCondition,System.Threading.CancellationToken)">
            <summary>
            Gets the status of all orchestration instances with paging that match the specified conditions.
            </summary>
            <param name="condition">Return orchestration instances that match the specified conditions.</param>
            <param name="cancellationToken">Cancellation token that can be used to cancel the status query operation.</param>
            <returns>Returns each page of orchestration status for all instances and continuation token of next page.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationClient.ListInstancesAsync(Microsoft.Azure.WebJobs.Extensions.DurableTask.OrchestrationStatusQueryCondition,System.Threading.CancellationToken)">
            <summary>
            Gets the status of all orchestration instances with paging that match the specified conditions.
            </summary>
            <param name="condition">Return orchestration instances that match the specified conditions.</param>
            <param name="cancellationToken">Cancellation token that can be used to cancel the status query operation.</param>
            <returns>Returns each page of orchestration status for all instances and continuation token of next page.</returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationContext">
            <summary>
            Provides functionality available to orchestration code.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationContext.Name">
            <summary>
            Gets the name of the current orchestration function.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationContext.InstanceId">
            <summary>
            Gets the instance ID of the currently executing orchestration.
            </summary>
            <remarks>
            The instance ID is generated and fixed when the orchestrator function is scheduled. It can be either
            auto-generated, in which case it is formatted as a GUID, or it can be user-specified with any format.
            </remarks>
            <value>
            The ID of the current orchestration instance.
            </value>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationContext.ParentInstanceId">
            <summary>
            Gets the parent instance ID of the currently executing sub-orchestration.
            </summary>
            <remarks>
            The parent instance ID is generated and fixed when the parent orchestrator function is scheduled. It can be either
            auto-generated, in which case it is formatted as a GUID, or it can be user-specified with any format.
            </remarks>
            <value>
            The ID of the parent orchestration of the current sub-orchestration instance. The value will be available only in sub-orchestrations.
            </value>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationContext.CurrentUtcDateTime">
            <summary>
            Gets the current date/time in a way that is safe for use in orchestrations and entity operations.
            </summary>
            <remarks>
            This date/time value is derived from the orchestration or entity history. It always returns the same value
            at specific points in the orchestrator function code, making it deterministic and safe for replay.
            </remarks>
            <value>The orchestration or entity's current date/time in UTC.</value>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationContext.IsReplaying">
            <summary>
            Gets a value indicating whether the orchestration or operation is currently replaying itself.
            </summary>
            <remarks>
            This property is useful when there is logic that needs to run only when *not* replaying. For example, certain types of application logging may become too noisy when duplicated
            as part of replay. The application code could check to see whether the function is
            being replayed and then issue the log statements when this value is <c>false</c>.
            </remarks>
            <value>
            <c>true</c> if the orchestration or operation is currently being replayed; otherwise <c>false</c>.
            </value>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationContext.GetInput``1">
            <summary>
            Gets the input of the current orchestrator function as a deserialized value.
            </summary>
            <typeparam name="TInput">Any data contract type that matches the JSON input.</typeparam>
            <returns>The deserialized input value.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationContext.SetOutput(System.Object)">
            <summary>
            Sets the output for the current orchestration.
            </summary>
            <param name="output">The JSON-serializeable output of the orchestration.</param>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationContext.ContinueAsNew(System.Object,System.Boolean)">
            <summary>
            Restarts the orchestration by clearing its history.
            </summary>
            <remarks>
            <para>Large orchestration histories can consume a lot of memory and cause delays in
            instance load times. This method can be used to periodically truncate the stored
            history of an orchestration instance.</para>
            <para>Note that any unprocessed external events will be discarded when an orchestration
            instance restarts itself using this method.</para>
            </remarks>
            <param name="input">The JSON-serializeable data to re-initialize the instance with.</param>
            <param name="preserveUnprocessedEvents">
            If set to <c>true</c>, re-adds any unprocessed external events into the new execution
            history when the orchestration instance restarts. If <c>false</c>, any unprocessed
            external events will be discarded when the orchestration instance restarts.
            </param>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationContext.SetCustomStatus(System.Object)">
            <summary>
            Sets the JSON-serializeable status of the current orchestrator function.
            </summary>
            <remarks>
            The <paramref name="customStatusObject"/> value is serialized to JSON and will
            be made available to the orchestration status query APIs. The serialized JSON
            value must not exceed 16 KB of UTF-16 encoded text.
            </remarks>
            <param name="customStatusObject">The JSON-serializeable value to use as the orchestrator function's custom status.</param>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationContext.CallHttpAsync(System.Net.Http.HttpMethod,System.Uri,System.String)">
            <summary>
            Makes an HTTP call to the specified uri.
            </summary>
            <param name="method">HttpMethod used for api call.</param>
            <param name="uri">uri used to make the HTTP call.</param>
            <param name="content">Content passed in the HTTP request.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/>Result of the HTTP call.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationContext.CallHttpAsync(Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableHttpRequest)">
            <summary>
            Makes an HTTP call using the information in the DurableHttpRequest.
            </summary>
            <param name="req">The DurableHttpRequest used to make the HTTP call.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/>Result of the HTTP call.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationContext.CallEntityAsync``1(Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityId,System.String)">
            <summary>
            Calls an operation on an entity and returns the result asynchronously.
            </summary>
            <typeparam name="TResult">The JSON-serializable result type of the operation.</typeparam>
            <param name="entityId">The target entity.</param>
            <param name="operationName">The name of the operation.</param>
            <returns>A task representing the result of the operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationContext.CallEntityAsync(Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityId,System.String)">
            <summary>
            Calls an operation on an entity and waits for it to complete.
            </summary>
            <param name="entityId">The target entity.</param>
            <param name="operationName">The name of the operation.</param>
            <returns>A task representing the completion of the operation on the entity.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationContext.CallEntityAsync``1(Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityId,System.String,System.Object)">
            <summary>
            Calls an operation on an entity, passing an argument, and returns the result asynchronously.
            </summary>
            <typeparam name="TResult">The JSON-serializable result type of the operation.</typeparam>
            <param name="entityId">The target entity.</param>
            <param name="operationName">The name of the operation.</param>
            <param name="operationInput">The input for the operation.</param>
            <returns>A task representing the result of the operation.</returns>
            <exception cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.LockingRulesViolationException">if the context already holds some locks, but not the one for <paramref name="entityId"/>.</exception>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationContext.CallEntityAsync(Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityId,System.String,System.Object)">
            <summary>
            Calls an operation on an entity, passing an argument, and waits for it to complete.
            </summary>
            <param name="entityId">The target entity.</param>
            <param name="operationName">The name of the operation.</param>
            <param name="operationInput">The input for the operation.</param>
            <returns>A task representing the completion of the operation on the entity.</returns>
            <exception cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.LockingRulesViolationException">if the context already holds some locks, but not the one for <paramref name="entityId"/>.</exception>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationContext.CallSubOrchestratorAsync``1(System.String,System.Object)">
            <summary>
            Schedules an orchestrator function named <paramref name="functionName"/> for execution.
            </summary>
            <typeparam name="TResult">The return type of the scheduled orchestrator function.</typeparam>
            <param name="functionName">The name of the orchestrator function to call.</param>
            <param name="input">The JSON-serializeable input to pass to the orchestrator function.</param>
            <returns>A durable task that completes when the called orchestrator function completes or fails.</returns>
            <exception cref="T:System.ArgumentException">
            The specified function does not exist, is disabled, or is not an orchestrator function.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The current thread is different than the thread which started the orchestrator execution.
            </exception>
            <exception cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.FunctionFailedException">
            The sub-orchestrator function failed with an unhandled exception.
            </exception>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationContext.CallSubOrchestratorAsync``1(System.String,System.String,System.Object)">
            <summary>
            Schedules an orchestration function named <paramref name="functionName"/> for execution.
            </summary>
            <typeparam name="TResult">The return type of the scheduled orchestrator function.</typeparam>
            <param name="functionName">The name of the orchestrator function to call.</param>
            <param name="instanceId">A unique ID to use for the sub-orchestration instance.</param>
            <param name="input">The JSON-serializeable input to pass to the orchestrator function.</param>
            <returns>A durable task that completes when the called orchestrator function completes or fails.</returns>
            <exception cref="T:System.ArgumentException">
            The specified function does not exist, is disabled, or is not an orchestrator function.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The current thread is different than the thread which started the orchestrator execution.
            </exception>
            <exception cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.FunctionFailedException">
            The activity function failed with an unhandled exception.
            </exception>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationContext.CallSubOrchestratorAsync(System.String,System.Object)">
            <summary>
            Schedules an orchestrator function named <paramref name="functionName"/> for execution.
            </summary>
            <param name="functionName">The name of the orchestrator function to call.</param>
            <param name="input">The JSON-serializeable input to pass to the orchestrator function.</param>
            <returns>A durable task that completes when the called orchestrator function completes or fails.</returns>
            <exception cref="T:System.ArgumentException">
            The specified function does not exist, is disabled, or is not an orchestrator function.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The current thread is different than the thread which started the orchestrator execution.
            </exception>
            <exception cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.FunctionFailedException">
            The sub-orchestrator function failed with an unhandled exception.
            </exception>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationContext.CallSubOrchestratorAsync(System.String,System.String,System.Object)">
            <summary>
            Schedules an orchestrator function named <paramref name="functionName"/> for execution.
            </summary>
            <param name="functionName">The name of the orchestrator function to call.</param>
            <param name="instanceId">A unique ID to use for the sub-orchestration instance.</param>
            <param name="input">The JSON-serializeable input to pass to the orchestrator function.</param>
            <returns>A durable task that completes when the called orchestrator function completes or fails.</returns>
            <exception cref="T:System.ArgumentException">
            The specified function does not exist, is disabled, or is not an orchestrator function.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The current thread is different than the thread which started the orchestrator execution.
            </exception>
            <exception cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.FunctionFailedException">
            The activity function failed with an unhandled exception.
            </exception>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationContext.CallSubOrchestratorWithRetryAsync``1(System.String,Microsoft.Azure.WebJobs.Extensions.DurableTask.RetryOptions,System.String,System.Object)">
            <summary>
            Schedules an orchestrator function named <paramref name="functionName"/> for execution with retry options.
            </summary>
            <typeparam name="TResult">The return type of the scheduled orchestrator function.</typeparam>
            <param name="functionName">The name of the orchestrator function to call.</param>
            <param name="retryOptions">The retry option for the orchestrator function.</param>
            <param name="instanceId">A unique ID to use for the sub-orchestration instance.</param>
            <param name="input">The JSON-serializeable input to pass to the orchestrator function.</param>
            <returns>A durable task that completes when the called orchestrator function completes or fails.</returns>
            <exception cref="T:System.ArgumentNullException">
            The retry option object is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            The specified function does not exist, is disabled, or is not an orchestrator function.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The current thread is different than the thread which started the orchestrator execution.
            </exception>
            <exception cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.FunctionFailedException">
            The activity function failed with an unhandled exception.
            </exception>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationContext.CallSubOrchestratorWithRetryAsync(System.String,Microsoft.Azure.WebJobs.Extensions.DurableTask.RetryOptions,System.Object)">
            <summary>
            Schedules an orchestrator function named <paramref name="functionName"/> for execution with retry options.
            </summary>
            <param name="functionName">The name of the orchestrator function to call.</param>
            <param name="retryOptions">The retry option for the orchestrator function.</param>
            <param name="input">The JSON-serializeable input to pass to the orchestrator function.</param>
            <returns>A durable task that completes when the called orchestrator function completes or fails.</returns>
            <exception cref="T:System.ArgumentNullException">
            The retry option object is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            The specified function does not exist, is disabled, or is not an orchestrator function.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The current thread is different than the thread which started the orchestrator execution.
            </exception>
            <exception cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.FunctionFailedException">
            The activity function failed with an unhandled exception.
            </exception>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationContext.CallSubOrchestratorWithRetryAsync(System.String,Microsoft.Azure.WebJobs.Extensions.DurableTask.RetryOptions,System.String,System.Object)">
            <summary>
            Schedules an orchestrator function named <paramref name="functionName"/> for execution with retry options.
            </summary>
            <param name="functionName">The name of the orchestrator function to call.</param>
            <param name="retryOptions">The retry option for the orchestrator function.</param>
            <param name="instanceId">A unique ID to use for the sub-orchestration instance.</param>
            <param name="input">The JSON-serializeable input to pass to the orchestrator function.</param>
            <returns>A durable task that completes when the called orchestrator function completes or fails.</returns>
            <exception cref="T:System.ArgumentNullException">
            The retry option object is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            The specified function does not exist, is disabled, or is not an orchestrator function.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The current thread is different than the thread which started the orchestrator execution.
            </exception>
            <exception cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.FunctionFailedException">
            The activity function failed with an unhandled exception.
            </exception>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationContext.CallSubOrchestratorWithRetryAsync``1(System.String,Microsoft.Azure.WebJobs.Extensions.DurableTask.RetryOptions,System.Object)">
            <summary>
            Schedules an orchestrator function named <paramref name="functionName"/> for execution with retry options.
            </summary>
            <typeparam name="TResult">The return type of the scheduled orchestrator function.</typeparam>
            <param name="functionName">The name of the orchestrator function to call.</param>
            <param name="retryOptions">The retry option for the orchestrator function.</param>
            <param name="input">The JSON-serializeable input to pass to the orchestrator function.</param>
            <returns>A durable task that completes when the called orchestrator function completes or fails.</returns>
            <exception cref="T:System.ArgumentNullException">
            The retry option object is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            The specified function does not exist, is disabled, or is not an orchestrator function.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The current thread is different than the thread which started the orchestrator execution.
            </exception>
            <exception cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.FunctionFailedException">
            The activity function failed with an unhandled exception.
            </exception>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationContext.CreateTimer``1(System.DateTime,``0,System.Threading.CancellationToken)">
            <summary>
            Creates a durable timer that expires at a specified time.
            </summary>
            <remarks>
            All durable timers created using this method must either expire or be cancelled
            using the <paramref name="cancelToken"/> before the orchestrator function completes.
            Otherwise the underlying framework will keep the instance alive until the timer expires.
            </remarks>
            <typeparam name="T">The type of <paramref name="state"/>.</typeparam>
            <param name="fireAt">The time at which the timer should expire.</param>
            <param name="state">Any state to be preserved by the timer.</param>
            <param name="cancelToken">The <c>CancellationToken</c> to use for cancelling the timer.</param>
            <returns>A durable task that completes when the durable timer expires.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationContext.CreateTimer(System.DateTime,System.Threading.CancellationToken)">
            <summary>
            Creates a durable timer that expires at a specified time.
            </summary>
            <remarks>
            All durable timers created using this method must either expire or be cancelled
            using the <paramref name="cancelToken"/> before the orchestrator function completes.
            Otherwise the underlying framework will keep the instance alive until the timer expires.
            </remarks>
            <param name="fireAt">The time at which the timer should expire.</param>
            <param name="cancelToken">The <c>CancellationToken</c> to use for cancelling the timer.</param>
            <returns>A durable task that completes when the durable timer expires.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationContext.WaitForExternalEvent``1(System.String)">
            <summary>
            Waits asynchronously for an event to be raised with name <paramref name="name"/> and returns the event data.
            </summary>
            <remarks>
            External clients can raise events to a waiting orchestration instance using
            <see cref="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationClient.RaiseEventAsync(System.String,System.String,System.Object)"/>.
            </remarks>
            <param name="name">The name of the event to wait for.</param>
            <typeparam name="T">Any serializeable type that represents the JSON event payload.</typeparam>
            <returns>A durable task that completes when the external event is received.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationContext.WaitForExternalEvent(System.String)">
            <summary>
            Waits asynchronously for an event to be raised with name <paramref name="name"/>.
            </summary>
            <remarks>
            External clients can raise events to a waiting orchestration instance using
            <see cref="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationClient.RaiseEventAsync(System.String,System.String,System.Object)"/> with the object parameter set to <c>null</c>.
            </remarks>
            <param name="name">The name of the event to wait for.</param>
            <returns>A durable task that completes when the external event is received.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationContext.WaitForExternalEvent(System.String,System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Waits asynchronously for an event to be raised with name <paramref name="name"/>.
            </summary>
            <remarks>
            External clients can raise events to a waiting orchestration instance using
            <see cref="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationClient.RaiseEventAsync(System.String,System.String,System.Object)"/> with the object parameter set to <c>null</c>.
            </remarks>
            <param name="name">The name of the event to wait for.</param>
            <param name="timeout">The duration after which to throw a TimeoutException.</param>
            <param name="cancelToken">The <c>CancellationToken</c> to use for cancelling <paramref name="timeout"/>'s internal timer.</param>
            <returns>A durable task that completes when the external event is received.</returns>
            <exception cref="T:System.TimeoutException">
            The external event was not received before the timeout expired.
            </exception>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationContext.WaitForExternalEvent``1(System.String,System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Waits asynchronously for an event to be raised with name <paramref name="name"/> and returns the event data.
            </summary>
            <remarks>
            External clients can raise events to a waiting orchestration instance using
            <see cref="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationClient.RaiseEventAsync(System.String,System.String,System.Object)"/>.
            </remarks>
            <param name="name">The name of the event to wait for.</param>
            <param name="timeout">The duration of time to wait for the event.</param>
            <param name="cancelToken">The <c>CancellationToken</c> to use for cancelling <paramref name="timeout"/>'s internal timer.</param>
            <typeparam name="T">Any serializeable type that represents the JSON event payload.</typeparam>
            <returns>A durable task that completes when the external event is received, or throws a timeout exception"/>
            if the timeout expires.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationContext.WaitForExternalEvent``1(System.String,System.TimeSpan,``0,System.Threading.CancellationToken)">
            <summary>
            Waits asynchronously for an event to be raised with name <paramref name="name"/> and returns the event data.
            </summary>
            <remarks>
            External clients can raise events to a waiting orchestration instance using
            <see cref="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationClient.RaiseEventAsync(System.String,System.String,System.Object)"/>.
            </remarks>
            <param name="name">The name of the event to wait for.</param>
            <param name="timeout">The duration of time to wait for the event.</param>
            <param name="defaultValue">If specified, the default value to return if the timeout expires before the external event is received.
            Otherwise, a timeout exception will be thrown instead.</param>
            <param name="cancelToken">The <c>CancellationToken</c> to use for cancelling <paramref name="timeout"/>'s internal timer.</param>
            <typeparam name="T">Any serializeable type that represents the JSON event payload.</typeparam>
            <returns>A durable task that completes when the external event is received, or returns the value of <paramref name="defaultValue"/>
            if the timeout expires.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationContext.LockAsync(Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityId[])">
            <summary>
            Acquires one or more locks, for the specified entities.
            </summary>
            <remarks>
            Locks can only be acquired if the current context does not hold any locks already.
            </remarks>
            <param name="entities">The entities whose locks should be acquired.</param>
            <returns>An IDisposable that releases the lock when disposed.</returns>
            <exception cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.LockingRulesViolationException">if the context already holds some locks.</exception>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationContext.IsLocked(System.Collections.Generic.IReadOnlyList{Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityId}@)">
            <summary>
            Determines whether the current context is locked, and if so, what locks are currently owned.
            </summary>
            <param name="ownedLocks">The collection of owned locks.</param>
            <remarks>
            Note that the collection of owned locks can be empty even if the context is locked. This happens
            if an orchestration calls a suborchestration without lending any locks.
            </remarks>
            <returns><c>true</c> if the context already holds some locks.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationContext.NewGuid">
            <summary>
            Creates a new GUID that is safe for replay within an orchestration or operation.
            </summary>
            <remarks>
            The default implementation of this method creates a name-based UUID using the algorithm from
            RFC 4122 §4.3. The name input used to generate this value is a combination of the orchestration
            instance ID and an internally managed sequence number.
            </remarks>
            <returns>The new <see cref="T:System.Guid"/> value.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationContext.CallActivityAsync``1(System.String,System.Object)">
            <summary>
            Schedules an activity function named <paramref name="functionName"/> for execution.
            </summary>
            <typeparam name="TResult">The return type of the scheduled activity function.</typeparam>
            <param name="functionName">The name of the activity function to call.</param>
            <param name="input">The JSON-serializeable input to pass to the activity function.</param>
            <returns>A durable task that completes when the called activity function completes or fails.</returns>
            <exception cref="T:System.ArgumentException">
            The specified function does not exist, is disabled, or is not an orchestrator function.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The current thread is different than the thread which started the orchestrator execution.
            </exception>
            <exception cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.FunctionFailedException">
            The activity function failed with an unhandled exception.
            </exception>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationContext.CallActivityAsync(System.String,System.Object)">
            <summary>
            Schedules an activity function named <paramref name="functionName"/> for execution.
            </summary>
            <param name="functionName">The name of the activity function to call.</param>
            <param name="input">The JSON-serializeable input to pass to the activity function.</param>
            <returns>A durable task that completes when the called function completes or fails.</returns>
            <exception cref="T:System.ArgumentException">
            The specified function does not exist, is disabled, or is not an orchestrator function.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The current thread is different than the thread which started the orchestrator execution.
            </exception>
            <exception cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.FunctionFailedException">
            The activity function failed with an unhandled exception.
            </exception>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationContext.CallActivityWithRetryAsync``1(System.String,Microsoft.Azure.WebJobs.Extensions.DurableTask.RetryOptions,System.Object)">
            <summary>
            Schedules an activity function named <paramref name="functionName"/> for execution with retry options.
            </summary>
            <typeparam name="TResult">The return type of the scheduled activity function.</typeparam>
            <param name="functionName">The name of the activity function to call.</param>
            <param name="retryOptions">The retry option for the activity function.</param>
            <param name="input">The JSON-serializeable input to pass to the activity function.</param>
            <returns>A durable task that completes when the called activity function completes or fails.</returns>
            <exception cref="T:System.ArgumentNullException">
            The retry option object is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            The specified function does not exist, is disabled, or is not an orchestrator function.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The current thread is different than the thread which started the orchestrator execution.
            </exception>
            <exception cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.FunctionFailedException">
            The activity function failed with an unhandled exception.
            </exception>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationContext.CallActivityWithRetryAsync(System.String,Microsoft.Azure.WebJobs.Extensions.DurableTask.RetryOptions,System.Object)">
            <summary>
            Schedules an activity function named <paramref name="functionName"/> for execution with retry options.
            </summary>
            <param name="functionName">The name of the activity function to call.</param>
            <param name="retryOptions">The retry option for the activity function.</param>
            <param name="input">The JSON-serializeable input to pass to the activity function.</param>
            <returns>A durable task that completes when the called activity function completes or fails.</returns>
            <exception cref="T:System.ArgumentNullException">
            The retry option object is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            The specified function does not exist, is disabled, or is not an orchestrator function.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The current thread is different than the thread which started the orchestrator execution.
            </exception>
            <exception cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.FunctionFailedException">
            The activity function failed with an unhandled exception.
            </exception>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationContext.SignalEntity(Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityId,System.String,System.Object)">
            <summary>
            Signals an entity to perform an operation, without waiting for a response. Any result or exception is ignored (fire and forget).
            </summary>
            <param name="entity">The target entity.</param>
            <param name="operationName">The name of the operation.</param>
            <param name="operationInput">The input for the operation.</param>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationContext.SignalEntity(Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityId,System.DateTime,System.String,System.Object)">
            <summary>
            Signals an operation to be performed by an entity at a specified time. Any result or exception is ignored (fire and forget).
            </summary>
            <param name="entity">The target entity.</param>
            <param name="scheduledTimeUtc">The time at which to start the operation.</param>
            <param name="operationName">The name of the operation.</param>
            <param name="operationInput">The input for the operation.</param>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationContext.StartNewOrchestration(System.String,System.Object,System.String)">
            <summary>
            Schedules a orchestration function named <paramref name="functionName"/> for execution./>.
            Any result or exception is ignored (fire and forget).
            </summary>
            <param name="functionName">The name of the orchestrator function to call.</param>
            <param name="input">the input to pass to the orchestrator function.</param>
            <param name="instanceId">optionally, an instance id for the orchestration. By default, a random GUID is used.</param>
            <exception cref="T:System.ArgumentException">
            The specified function does not exist, is disabled, or is not an orchestrator function.
            </exception>
            <returns>The instance id of the new orchestration.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationContext.CreateEntityProxy``1(System.String)">
            <summary>
            Create an entity proxy.
            </summary>
            <param name="entityKey">The target entity key.</param>
            <typeparam name="TEntityInterface">Entity interface.</typeparam>
            <returns>Entity proxy.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationContext.CreateEntityProxy``1(Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityId)">
            <summary>
            Create an entity proxy.
            </summary>
            <param name="entityId">The target entity.</param>
            <typeparam name="TEntityInterface">Entity interface.</typeparam>
            <returns>Entity proxy.</returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableOrchestrationContextBase">
            <summary>
            Formerly, the abstract base class for DurableOrchestrationContext.
            Now obsolete: use <see cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationContext"/> instead.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableActivityContextBase">
            <summary>
            Formerly, the abstract base class for DurableActivityContext.
            Now obsolete: use <see cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableActivityContext"/> instead.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableOrchestrationClientBase">
            <summary>
            Formerly, the abstract base class for DurableOrchestrationClient.
            Now obsolete: use <see cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationClient"/> instead.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.DeterministicAttribute">
            <summary>
            Attribute used with the Durable Functions Analyzer to label a method as Deterministic. This allows the method to be called in an Orchestration function without causing a compiler warning.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurabilityProvider">
            <summary>
            The backend storage provider that provides the actual durability of Durable Functions.
            This is functionally a superset of <see cref="T:DurableTask.Core.IOrchestrationService"/> and <see cref="T:DurableTask.Core.IOrchestrationServiceClient"/>.
            If the storage provider does not any of the Durable Functions specific operations, they can use this class
            directly with the expectation that only those interfaces will be implemented. All of the Durable Functions specific
            methods/operations are virtual and can be overwritten by creating a subclass.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurabilityProvider.#ctor(System.String,DurableTask.Core.IOrchestrationService,DurableTask.Core.IOrchestrationServiceClient,System.String)">
            <summary>
            Creates the default <see cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurabilityProvider"/>.
            </summary>
            <param name="storageProviderName">The name of the storage backend providing the durability.</param>
            <param name="service">The internal <see cref="T:DurableTask.Core.IOrchestrationService"/> that provides functionality
            for this classes implementions of <see cref="T:DurableTask.Core.IOrchestrationService"/>.</param>
            <param name="serviceClient">The internal <see cref="T:DurableTask.Core.IOrchestrationServiceClient"/> that provides functionality
            for this classes implementions of <see cref="T:DurableTask.Core.IOrchestrationServiceClient"/>.</param>
            <param name="connectionName">The name of the app setting that stores connection details for the storage provider.</param>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurabilityProvider.ConnectionName">
            <summary>
            The name of the environment variable that contains connection details for how to connect to storage providers.
            Corresponds to the <see cref="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableClientAttribute.ConnectionName"/> for binding data.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurabilityProvider.SupportsEntities">
            <summary>
            Specifies whether the durability provider supports Durable Entities.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurabilityProvider.ConfigurationJson">
            <summary>
            JSON representation of configuration to emit in telemetry.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurabilityProvider.MaximumDelayTime">
            <summary>
            Value of maximum durable timer delay. Used for long running durable timers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurabilityProvider.LongRunningTimerIntervalLength">
            <summary>
            Interval time used for long running timers.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurabilityProvider.TaskOrchestrationDispatcherCount">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurabilityProvider.MaxConcurrentTaskOrchestrationWorkItems">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurabilityProvider.EventBehaviourForContinueAsNew">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurabilityProvider.TaskActivityDispatcherCount">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurabilityProvider.MaxConcurrentTaskActivityWorkItems">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurabilityProvider.AbandonTaskActivityWorkItemAsync(DurableTask.Core.TaskActivityWorkItem)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurabilityProvider.AbandonTaskOrchestrationWorkItemAsync(DurableTask.Core.TaskOrchestrationWorkItem)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurabilityProvider.CompleteTaskActivityWorkItemAsync(DurableTask.Core.TaskActivityWorkItem,DurableTask.Core.TaskMessage)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurabilityProvider.CompleteTaskOrchestrationWorkItemAsync(DurableTask.Core.TaskOrchestrationWorkItem,DurableTask.Core.OrchestrationRuntimeState,System.Collections.Generic.IList{DurableTask.Core.TaskMessage},System.Collections.Generic.IList{DurableTask.Core.TaskMessage},System.Collections.Generic.IList{DurableTask.Core.TaskMessage},DurableTask.Core.TaskMessage,DurableTask.Core.OrchestrationState)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurabilityProvider.CreateAsync">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurabilityProvider.CreateAsync(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurabilityProvider.CreateIfNotExistsAsync">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurabilityProvider.DeleteAsync">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurabilityProvider.DeleteAsync(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurabilityProvider.GetDelayInSecondsAfterOnFetchException(System.Exception)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurabilityProvider.GetDelayInSecondsAfterOnProcessException(System.Exception)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurabilityProvider.IsMaxMessageCountExceeded(System.Int32,DurableTask.Core.OrchestrationRuntimeState)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurabilityProvider.LockNextTaskActivityWorkItem(System.TimeSpan,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurabilityProvider.LockNextTaskOrchestrationWorkItemAsync(System.TimeSpan,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurabilityProvider.ReleaseTaskOrchestrationWorkItemAsync(DurableTask.Core.TaskOrchestrationWorkItem)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurabilityProvider.RenewTaskActivityWorkItemLockAsync(DurableTask.Core.TaskActivityWorkItem)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurabilityProvider.RenewTaskOrchestrationWorkItemLockAsync(DurableTask.Core.TaskOrchestrationWorkItem)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurabilityProvider.StartAsync">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurabilityProvider.StopAsync">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurabilityProvider.StopAsync(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurabilityProvider.GetAllOrchestrationStates(System.Threading.CancellationToken)">
            <summary>
            Gets the status of all orchestration instances.
            </summary>
            <param name="cancellationToken">A token to cancel the request.</param>
            <returns>Returns a task which completes when the status has been fetched.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurabilityProvider.GetAllOrchestrationStatesWithFilters(System.DateTime,System.Nullable{System.DateTime},System.Collections.Generic.IEnumerable{Microsoft.Azure.WebJobs.Extensions.DurableTask.OrchestrationRuntimeStatus},System.Threading.CancellationToken)">
            <summary>
            Gets the status of all orchestration instances within the specified parameters.
            </summary>
            <param name="createdTimeFrom">Return orchestration instances which were created after this DateTime.</param>
            <param name="createdTimeTo">Return orchestration instances which were created before this DateTime.</param>
            <param name="runtimeStatus">Return orchestration instances which matches the runtimeStatus.</param>
            <param name="cancellationToken">A token to cancel the request.</param>
            <returns>Returns a task which completes when the status has been fetched.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurabilityProvider.GetOrchestrationStateWithInputsAsync(System.String,System.Boolean)">
            <summary>
            Gets the state of the specified orchestration instance.
            </summary>
            <param name="instanceId">The ID of the orchestration instance to query.</param>
            <param name="showInput">If set, fetch and return the input for the orchestration instance.</param>
            <returns>Returns a task which completes when the state has been fetched.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurabilityProvider.GetOrchestrationStateWithPagination(Microsoft.Azure.WebJobs.Extensions.DurableTask.OrchestrationStatusQueryCondition,System.Threading.CancellationToken)">
            <summary>
            Gets paginated result of all orchestration instances that match query status parameters.
            </summary>
            <param name="condition">The filtering conditions of the query.</param>
            <param name="cancellationToken">A token to cancel the request.</param>
            <returns>Paginated result of orchestration state.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurabilityProvider.PurgeHistoryByFilters(System.DateTime,System.Nullable{System.DateTime},System.Collections.Generic.IEnumerable{DurableTask.Core.OrchestrationStatus})">
            <summary>
            Purges history that meet the required parameters.
            </summary>
            <param name="createdTimeFrom">Purge the history of orchestration instances which were created after this DateTime.</param>
            <param name="createdTimeTo">Purge the history of orchestration instances which were created before this DateTime.</param>
            <param name="runtimeStatus">Purge the history of orchestration instances which matches the runtimeStatus.</param>
            <returns>The number of instances purged.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurabilityProvider.PurgeInstanceHistoryByInstanceId(System.String)">
            <summary>
            Purges the instance history for the provided instance id.
            </summary>
            <param name="instanceId">The instance id for the instance history to purge.</param>
            <returns>The number of instances purged.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurabilityProvider.RetrieveSerializedEntityState(Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityId,Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Retrieves the state for a serialized entity.
            </summary>
            <param name="entityId">Entity id to fetch state for.</param>
            <param name="serializierSettings">JsonSerializerSettings for custom deserialization.</param>
            <returns>State for the entity.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurabilityProvider.RewindAsync(System.String,System.String)">
            <summary>
            Rewinds the specified failed orchestration instance with a reason.
            </summary>
            <param name="instanceId">The ID of the orchestration instance to rewind.</param>
            <param name="reason">The reason for rewinding the orchestration instance.</param>
            <returns>A task that completes when the rewind message is enqueued.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurabilityProvider.CreateTaskOrchestrationAsync(DurableTask.Core.TaskMessage)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurabilityProvider.CreateTaskOrchestrationAsync(DurableTask.Core.TaskMessage,DurableTask.Core.OrchestrationStatus[])">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurabilityProvider.SendTaskOrchestrationMessageAsync(DurableTask.Core.TaskMessage)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurabilityProvider.SendTaskOrchestrationMessageBatchAsync(DurableTask.Core.TaskMessage[])">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurabilityProvider.WaitForOrchestrationAsync(System.String,System.String,System.TimeSpan,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurabilityProvider.ForceTerminateTaskOrchestrationAsync(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurabilityProvider.GetOrchestrationStateAsync(System.String,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurabilityProvider.GetOrchestrationStateAsync(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurabilityProvider.GetOrchestrationHistoryAsync(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurabilityProvider.PurgeOrchestrationHistoryAsync(System.DateTime,DurableTask.Core.OrchestrationStateTimeRangeFilterType)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurabilityProvider.ValidateDelayTime(System.TimeSpan,System.String@)">
            <summary>
            Uses durability provider specific logic to verify whether a timespan for a timer, timeout
            or retry interval is allowed by the provider.
            </summary>
            <param name="timespan">The timespan that the code will have to wait for.</param>
            <param name="errorMessage">The error message if the timespan is invalid.</param>
            <returns>A boolean indicating whether the time interval is valid.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurabilityProvider.ConnectionNameMatches(Microsoft.Azure.WebJobs.Extensions.DurableTask.DurabilityProvider)">
            <summary>
             Returns true if the stored connection string, ConnectionName, matches the input DurabilityProvider ConnectionName.
            </summary>
            <param name="durabilityProvider">The DurabilityProvider used to check for matching connection string names.</param>
            <returns>A boolean indicating whether the connection names match.</returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableClientAttribute">
            <summary>
            Attribute used to bind a function parameter to a <see cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableClient"/>, <see cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableEntityClient"/>, or <see cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationClient"/> instance.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableClientAttribute.TaskHub">
            <summary>
            Optional. Gets or sets the name of the task hub in which the orchestration data lives.
            </summary>
            <value>The task hub used by this binding.</value>
            <remarks>
            The default behavior is to use the task hub name specified in <see cref="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskOptions.HubName"/>.
            If no value exists there, then a default value will be used.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableClientAttribute.ConnectionName">
            <summary>
            Optional. Gets or sets the setting name for the app setting containing connection details used by this binding to connect
            to instances of the storage provider other than the default one this application communicates with.
            </summary>
            <value>The name of an app setting containing connection details.</value>
            <remarks>
            For Azure Storage the default behavior is to use the value of <see cref="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.AzureStorageOptions.ConnectionStringName"/>.
            If no value exists there, then the default behavior is to use the standard `AzureWebJobsStorage` connection string for all storage usage.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableClientAttribute.GetHashCode">
            <summary>
            Returns a hash code for this attribute.
            </summary>
            <returns>A hash code for this attribute.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableClientAttribute.Equals(System.Object)">
            <summary>
            Compares two <see cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableClientAttribute"/> instances for value equality.
            </summary>
            <param name="obj">The <see cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableClientAttribute"/> object to compare with.</param>
            <returns><c>true</c> if the two attributes have the same configuration; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableClientAttribute.Equals(Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableClientAttribute)">
            <summary>
            Compares two <see cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableClientAttribute"/> instances for value equality.
            </summary>
            <param name="other">The <see cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableClientAttribute"/> object to compare with.</param>
            <returns><c>true</c> if the two attributes have the same configuration; otherwise <c>false</c>.</returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableEntityStatus">
            <summary>
            Represents the status of a durable entity instance.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableEntityStatus.EntityId">
            <summary>
            Gets the EntityId of the queried entity instance.
            </summary>
            <value>
            The unique EntityId of the instance.
            </value>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableEntityStatus.LastOperationTime">
            <summary>
            Gets the time of the last operation processed by the entity instance.
            </summary>
            <value>
            The last operation time in UTC.
            </value>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableEntityStatus.State">
            <summary>
            Gets the state of the entity instance.
            </summary>
            <value>
            The state as either a <c>JToken</c> or <c>null</c> if no state was provided.
            </value>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableHttpRequest">
            <summary>
            Request used to make an HTTP call through Durable Functions.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableHttpRequest.#ctor(System.Net.Http.HttpMethod,System.Uri,System.Collections.Generic.IDictionary{System.String,Microsoft.Extensions.Primitives.StringValues},System.String,Microsoft.Azure.WebJobs.Extensions.DurableTask.ITokenSource,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableHttpRequest"/> class.
            </summary>
            <param name="method">Method used for HTTP request.</param>
            <param name="uri">Uri used to make the HTTP request.</param>
            <param name="headers">Headers added to the HTTP request.</param>
            <param name="content">Content added to the body of the HTTP request.</param>
            <param name="tokenSource">AAD authentication attached to the HTTP request.</param>
            <param name="asynchronousPatternEnabled">Specifies whether the DurableHttpRequest should handle the asynchronous pattern.</param>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableHttpRequest.Method">
            <summary>
            HttpMethod used in the HTTP request made by the Durable Function.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableHttpRequest.Uri">
            <summary>
            Uri used in the HTTP request made by the Durable Function.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableHttpRequest.Headers">
            <summary>
            Headers passed with the HTTP request made by the Durable Function.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableHttpRequest.Content">
            <summary>
            Content passed with the HTTP request made by the Durable Function.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableHttpRequest.TokenSource">
            <summary>
            Mechanism for attaching an OAuth token to the request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableHttpRequest.AsynchronousPatternEnabled">
            <summary>
            Specifies whether the Durable HTTP APIs should automatically
            handle the asynchronous HTTP pattern.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableHttpResponse">
            <summary>
            Response received from the HTTP request made by the Durable Function.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableHttpResponse.#ctor(System.Net.HttpStatusCode,System.Collections.Generic.IDictionary{System.String,Microsoft.Extensions.Primitives.StringValues},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableHttpResponse"/> class.
            </summary>
            <param name="statusCode">HTTP Status code returned from the HTTP call.</param>
            <param name="headers">Headers returned from the HTTP call.</param>
            <param name="content">Content returned from the HTTP call.</param>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableHttpResponse.StatusCode">
            <summary>
            Status code returned from an HTTP request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableHttpResponse.Headers">
            <summary>
            Headers in the response from an HTTP request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableHttpResponse.Content">
            <summary>
            Content returned from an HTTP request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableHttpResponse.CreateDurableHttpResponseWithHttpResponseMessage(System.Net.Http.HttpResponseMessage)">
            <summary>
            Creates a DurableHttpResponse from an HttpResponseMessage.
            </summary>
            <param name="httpResponseMessage">HttpResponseMessage returned from the HTTP call.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the result of the asynchronous operation.</returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableOrchestrationStatus">
            <summary>
            Represents the status of a durable orchestration instance.
            </summary>
            <remarks>
            An external client can fetch the status of an orchestration instance using
            <see cref="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationClient.GetStatusAsync(System.String,System.Boolean,System.Boolean,System.Boolean)"/>.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableOrchestrationStatus.Name">
            <summary>
            Gets the name of the queried orchestrator function.
            </summary>
            <value>
            The orchestrator function name.
            </value>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableOrchestrationStatus.InstanceId">
            <summary>
            Gets the ID of the queried orchestration instance.
            </summary>
            <remarks>
            The instance ID is generated and fixed when the orchestrator function is scheduled. It can be either
            auto-generated, in which case it is formatted as a GUID, or it can be user-specified with any format.
            </remarks>
            <value>
            The unique ID of the instance.
            </value>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableOrchestrationStatus.CreatedTime">
            <summary>
            Gets the time at which the orchestration instance was created.
            </summary>
            <remarks>
            If the orchestration instance is in the <see cref="F:Microsoft.Azure.WebJobs.Extensions.DurableTask.OrchestrationRuntimeStatus.Pending"/>
            status, this time represents the time at which the orchestration instance was scheduled.
            </remarks>
            <value>
            The instance creation time in UTC.
            </value>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableOrchestrationStatus.LastUpdatedTime">
            <summary>
            Gets the time at which the orchestration instance last updated its execution history.
            </summary>
            <value>
            The last-updated time in UTC.
            </value>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableOrchestrationStatus.Input">
            <summary>
            Gets the input of the orchestrator function instance.
            </summary>
            <value>
            The input as either a <c>JToken</c> or <c>null</c> if no input was provided.
            </value>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableOrchestrationStatus.Output">
            <summary>
            Gets the output of the queried orchestration instance.
            </summary>
            <value>
            The output as either a <c>JToken</c> object or <c>null</c> if it has not yet completed.
            </value>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableOrchestrationStatus.RuntimeStatus">
            <summary>
            Gets the runtime status of the queried orchestration instance.
            </summary>
            <value>
            Expected values include `Running`, `Pending`, `Failed`, `Canceled`, `Terminated`, `Completed`.
            </value>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableOrchestrationStatus.CustomStatus">
            <summary>
            Gets the custom status payload (if any) that was set by the orchestrator function.
            </summary>
            <remarks>
            Orchestrator functions can set a custom status using <see cref="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationContext.SetCustomStatus(System.Object)"/>.
            </remarks>
            <value>
            The custom status as either a <c>JToken</c> object or <c>null</c> if no custom status has been set.
            </value>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableOrchestrationStatus.History">
            <summary>
            Gets the execution history of the orchestration instance.
            </summary>
            <remarks>
            The history log can be large and is therefore <c>null</c> by default.
            It is populated only when explicitly requested in the call to
            <see cref="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationClient.GetStatusAsync(System.String,System.Boolean,System.Boolean,System.Boolean)"/>.
            </remarks>
            <value>
            The output as a <c>JArray</c> object or <c>null</c>.
            </value>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskExtension">
            <summary>
            Configuration for the Durable Functions extension.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskExtension.#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskOptions},Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Azure.WebJobs.INameResolver,Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurabilityProviderFactory,Microsoft.Azure.WebJobs.Extensions.DurableTask.IApplicationLifetimeWrapper,Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableHttpMessageHandlerFactory,Microsoft.Azure.WebJobs.Extensions.DurableTask.ILifeCycleNotificationHelper,Microsoft.Azure.WebJobs.Extensions.DurableTask.IMessageSerializerSettingsFactory,Microsoft.Azure.WebJobs.Extensions.DurableTask.IErrorSerializerSettingsFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskExtension"/>.
            </summary>
            <param name="options">The configuration options for this extension.</param>
            <param name="loggerFactory">The logger factory used for extension-specific logging and orchestration tracking.</param>
            <param name="nameResolver">The name resolver to use for looking up application settings.</param>
            <param name="orchestrationServiceFactory">The factory used to create orchestration service based on the configured storage provider.</param>
            <param name="durableHttpMessageHandlerFactory">The HTTP message handler that handles HTTP requests and HTTP responses.</param>
            <param name="hostLifetimeService">The host shutdown notification service for detecting and reacting to host shutdowns.</param>
            <param name="lifeCycleNotificationHelper">The lifecycle notification helper used for custom orchestration tracking.</param>
            <param name="messageSerializerSettingsFactory">The factory used to create <see cref="T:Newtonsoft.Json.JsonSerializerSettings"/> for message settings.</param>
            <param name="errorSerializerSettingsFactory">The factory used to create <see cref="T:Newtonsoft.Json.JsonSerializerSettings"/> for error settings.</param>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskExtension.Microsoft#Azure#WebJobs#Host#Config#IExtensionConfigProvider#Initialize(Microsoft.Azure.WebJobs.Host.Config.ExtensionConfigContext)">
            <summary>
            Internal initialization call from the WebJobs host.
            </summary>
            <param name="context">Extension context provided by WebJobs.</param>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskExtension.Dispose">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskExtension.DeleteTaskHubAsync">
            <summary>
            Deletes all data stored in the current task hub.
            </summary>
            <returns>A task representing the async delete operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskExtension.DurableTask#Core#INameVersionObjectManager{DurableTask#Core#TaskOrchestration}#Add(DurableTask.Core.ObjectCreator{DurableTask.Core.TaskOrchestration})">
            <summary>
            Called by the Durable Task Framework: Not used.
            </summary>
            <param name="creator">This parameter is not used.</param>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskExtension.DurableTask#Core#INameVersionObjectManager{DurableTask#Core#TaskOrchestration}#GetObject(System.String,System.String)">
            <summary>
            Called by the Durable Task Framework: Returns the specified <see cref="T:DurableTask.Core.TaskOrchestration"/>.
            </summary>
            <param name="name">The name of the orchestration to return.</param>
            <param name="version">Not used.</param>
            <returns>An orchestration shim that delegates execution to an orchestrator function.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskExtension.DurableTask#Core#INameVersionObjectManager{DurableTask#Core#TaskActivity}#Add(DurableTask.Core.ObjectCreator{DurableTask.Core.TaskActivity})">
            <summary>
            Called by the durable task framework: Not used.
            </summary>
            <param name="creator">This parameter is not used.</param>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskExtension.DurableTask#Core#INameVersionObjectManager{DurableTask#Core#TaskActivity}#GetObject(System.String,System.String)">
            <summary>
            Called by the Durable Task Framework: Returns the specified <see cref="T:DurableTask.Core.TaskActivity"/>.
            </summary>
            <param name="name">The name of the activity to return.</param>
            <param name="version">Not used.</param>
            <returns>An activity shim that delegates execution to an activity function.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskExtension.ActivityMiddleware(DurableTask.Core.Middleware.DispatchMiddlewareContext,System.Func{System.Threading.Tasks.Task})">
            <summary>
            This DTFx activity middleware allows us to add context to the activity function shim
            before it actually starts running.
            </summary>
            <param name="dispatchContext">A property bag containing useful DTFx context.</param>
            <param name="next">The handler for running the next middleware in the pipeline.</param>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskExtension.OrchestrationMiddleware(DurableTask.Core.Middleware.DispatchMiddlewareContext,System.Func{System.Threading.Tasks.Task})">
            <summary>
            This DTFx orchestration middleware allows us to initialize Durable Functions-specific context
            and make the execution happen in a way that plays nice with the Azure Functions execution pipeline.
            </summary>
            <param name="dispatchContext">A property bag containing useful DTFx context.</param>
            <param name="next">The handler for running the next middleware in the pipeline.</param>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskExtension.EntityMiddleware(DurableTask.Core.Middleware.DispatchMiddlewareContext,System.Func{System.Threading.Tasks.Task})">
            <summary>
            This DTFx orchestration middleware (for entities) allows us to add context and set state
            to the entity shim orchestration before it starts executing the actual entity logic.
            </summary>
            <param name="dispatchContext">A property bag containing useful DTFx context.</param>
            <param name="next">The handler for running the next middleware in the pipeline.</param>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskExtension.GetClient(Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableClientAttribute)">
            <summary>
            Gets a <see cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableClient"/> using configuration from a <see cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableClientAttribute"/> instance.
            </summary>
            <param name="attribute">The attribute containing the client configuration parameters.</param>
            <returns>Returns a <see cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableClient"/> instance. The returned instance may be a cached instance.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskExtension.Microsoft#Azure#WebJobs#IAsyncConverter{System#Net#Http#HttpRequestMessage,System#Net#Http#HttpResponseMessage}#ConvertAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskExtension.TagActivityWithOrchestrationStatus(Microsoft.Azure.WebJobs.Extensions.DurableTask.OrchestrationRuntimeStatus,System.String,System.Boolean)">
            <summary>
            Tags the current Activity with metadata: DurableFunctionsType, DurableFunctionsInstanceId, DurableFunctionsRuntimeStatus.
            This metadata will show up in Application Insights, if enabled.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskJobHostConfigurationExtensions">
            <summary>
            Extension for registering a Durable Functions configuration with <c>JobHostConfiguration</c>.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskJobHostConfigurationExtensions.AddDurableTask(Microsoft.Azure.WebJobs.IWebJobsBuilder)">
            <summary>
            Adds the Durable Task extension to the provided <see cref="T:Microsoft.Azure.WebJobs.IWebJobsBuilder"/>.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.Azure.WebJobs.IWebJobsBuilder"/> to configure.</param>
            <returns>Returns the provided <see cref="T:Microsoft.Azure.WebJobs.IWebJobsBuilder"/>.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskJobHostConfigurationExtensions.AddDurableTask(Microsoft.Azure.WebJobs.IWebJobsBuilder,Microsoft.Extensions.Options.IOptions{Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskOptions})">
            <summary>
            Adds the Durable Task extension to the provided <see cref="T:Microsoft.Azure.WebJobs.IWebJobsBuilder"/>.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.Azure.WebJobs.IWebJobsBuilder"/> to configure.</param>
            <param name="options">The configuration options for this extension.</param>
            <returns>Returns the provided <see cref="T:Microsoft.Azure.WebJobs.IWebJobsBuilder"/>.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskJobHostConfigurationExtensions.AddDurableTask(Microsoft.Azure.WebJobs.IWebJobsBuilder,System.Action{Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskOptions})">
            <summary>
            Adds the Durable Task extension to the provided <see cref="T:Microsoft.Azure.WebJobs.IWebJobsBuilder"/>.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.Azure.WebJobs.IWebJobsBuilder"/> to configure.</param>
            <param name="configure">An <see cref="T:System.Action`1"/> to configure the provided <see cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskOptions"/>.</param>
            <returns>Returns the modified <paramref name="builder"/> object.</returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityQuery">
            <summary>
            Query condition for searching the status of entity instances.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityQuery.EntityName">
            <summary>
            Return entity instances associated with this entity name.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityQuery.LastOperationFrom">
            <summary>
            Return entity instances which had operations after this DateTime.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityQuery.LastOperationTo">
            <summary>
            Return entity instances which had operations before this DateTime.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityQuery.PageSize">
            <summary>
            Number of records per one request. The default value is 100.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityQuery.ContinuationToken">
            <summary>
            ContinuationToken of the pager.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityQuery.FetchState">
            <summary>
            Determines whether the query will include the state of the entity.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityQueryResult">
            <summary>
            The status of all entity instances with paging for a given query.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityQueryResult.Entities">
            <summary>
            Gets or sets a collection of statuses of entity instances matching the query description.
            </summary>
            <value>A collection of entity instance status values.</value>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityQueryResult.ContinuationToken">
            <summary>
            Gets or sets a token that can be used to resume the query with data not already returned by this query.
            </summary>
            <value>A server-generated continuation token or <c>null</c> if there are no further continuations.</value>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.Entity">
            <summary>
            Statically accessible context for entity operations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.Entity.Current">
            <summary>
            The context of the currently executing entity.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.Entity.SetMockContext(Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableEntityContext)">
            <summary>
            Sets the current context to a mocked context for unit testing.
            </summary>
            <param name="mockContext">The mocked context.</param>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityCurrentOperationStatus">
            <summary>
            Information about the current status of an operation executing on an entity.
            Excludes potentially large data (such as the operation input) so it can be read with low latency.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityCurrentOperationStatus.Operation">
            <summary>
            The name of the operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityCurrentOperationStatus.Id">
            <summary>
            The unique identifier for this operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityCurrentOperationStatus.ParentInstanceId">
            <summary>
            The parent instance that called this operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityCurrentOperationStatus.StartTime">
            <summary>
            The UTC time at which the entity started processing this operation.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityId">
            <summary>
            A unique identifier for an entity, consisting of entity name and entity key.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityId.#ctor(System.String,System.String)">
            <summary>
            Create an entity id for an entity.
            </summary>
            <param name="entityName">The name of this class of entities.</param>
            <param name="entityKey">The entity key.</param>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityId.EntityName">
            <summary>
            The name for this class of entities.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityId.EntityKey">
            <summary>
            The entity key. Uniquely identifies an entity among all entities of the same name.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityId.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityId.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityId.Equals(Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityId)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityId.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityId.CompareTo(System.Object)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityMessageEventNames">
            <summary>
            Determines event names to use for messages sent to and from entities.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.EntitySchedulerException">
            <summary>
            Exception used to describe various issues encountered by the entity scheduler.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.EntitySchedulerException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.EntitySchedulerException"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.EntitySchedulerException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes an new instance of the <see cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.EntitySchedulerException"/> class.
            </summary>
            <param name="errorMessage">The message that describes the error.</param>
            <param name="innerException">The exception that was caught.</param>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.EntitySchedulerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.EntitySchedulerException"/> class with serialized data.
            </summary>
            <param name="info">The System.Runtime.Serialization.SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The System.Runtime.Serialization.StreamingContext that contains contextual information about the source or destination.</param>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityStateResponse`1">
            <summary>
            The response returned by <see cref="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableEntityClient.ReadEntityStateAsync``1(Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityId,System.String,System.String)"/>.
            </summary>
            <typeparam name="T">The JSON-serializable type of the entity.</typeparam>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityStateResponse`1.EntityExists">
            <summary>
            Whether this entity exists or not.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityStateResponse`1.EntityState">
            <summary>
            The current state of the entity, if it exists, or default(<typeparamref name="T"/>) otherwise.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityStatus">
            <summary>
            Information about the current status of an entity. Excludes potentially large data
            (such as the entity state, or the contents of the queue) so it can always be read with low latency.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityStatus.EntityExists">
            <summary>
            Whether this entity exists or not.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityStatus.QueueSize">
            <summary>
            The size of the queue, i.e. the number of operations that are waiting for the current operation to complete.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityStatus.LockedBy">
            <summary>
            The instance id of the orchestration that currently holds the lock of this entity.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityStatus.CurrentOperation">
            <summary>
            The operation that is currently executing on this entity.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.LockingRulesViolationException">
            <summary>
            The exception that is thrown when application code violates the locking rules.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.MessageSorter">
            <summary>
            provides message ordering and deduplication of request messages (operations or lock requests)
            that are sent to entities, from other entities, or from orchestrations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.MessageSorter.NumberBufferedRequests">
            <summary>
            Used for testing purposes.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.MessageSorter.LabelOutgoingMessage(Microsoft.Azure.WebJobs.Extensions.DurableTask.RequestMessage,System.String,System.DateTime,System.TimeSpan)">
            <summary>
            Called on the sending side, to fill in timestamp and predecessor fields.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.MessageSorter.ReceiveInOrder(Microsoft.Azure.WebJobs.Extensions.DurableTask.RequestMessage,System.TimeSpan)">
            <summary>
            Called on the receiving side, to reorder and deduplicate within the window.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.OperationErrorException">
            <summary>
            Exception result representing an operation that failed, in case
            the original exception is not serializable, or out-of-proc.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.OperationErrorException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.OperationErrorException"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.OperationErrorException.#ctor(System.String)">
            <summary>
            Initializes an new instance of the <see cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.OperationErrorException"/> class.
            </summary>
            <param name="errorMessage">The message that describes the error.</param>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.OperationErrorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.OperationErrorException"/> class with serialized data.
            </summary>
            <param name="info">The System.Runtime.Serialization.SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The System.Runtime.Serialization.StreamingContext that contains contextual information about the source or destination.</param>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityProxy">
            <summary>
            Provides the base implementation for the entity proxy.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityProxy.#ctor(Microsoft.Azure.WebJobs.Extensions.DurableTask.IEntityProxyContext,Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityId)">
            <summary>
            Create an entity proxy.
            </summary>
            <param name="context">context.</param>
            <param name="entityId">Entity id.</param>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityProxy.CallAsync(System.String,System.Object)">
            <summary>
            Call entity function.
            </summary>
            <param name="operationName">The name of the operation.</param>
            <param name="operationInput">The input for the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the result of the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityProxy.CallAsync``1(System.String,System.Object)">
            <summary>
            Call entity function.
            </summary>
            <typeparam name="TResult">The return type of the called entity function.</typeparam>
            <param name="operationName">The name of the operation.</param>
            <param name="operationInput">The input for the operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the result of the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityProxy.Signal(System.String,System.Object)">
            <summary>
            Signal entity function.
            </summary>
            <param name="operationName">The name of the operation.</param>
            <param name="operationInput">The input for the operation.</param>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.IEntityProxyContext">
            <summary>
            Abstract entity proxy context.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IEntityProxyContext.CallAsync(Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityId,System.String,System.Object)">
            <summary>
            Call entity function.
            </summary>
            <param name="entityId">Entity id.</param>
            <param name="operationName">Entity operation name.</param>
            <param name="operationInput">Entity input value.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the result of the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IEntityProxyContext.CallAsync``1(Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityId,System.String,System.Object)">
            <summary>
            Call entity function.
            </summary>
            <typeparam name="TResult">Result type.</typeparam>
            <param name="entityId">Entity id.</param>
            <param name="operationName">Entity operation name.</param>
            <param name="operationInput">Entity input value.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the result of the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IEntityProxyContext.Signal(Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityId,System.String,System.Object)">
            <summary>
            Signal entity function.
            </summary>
            <param name="entityId">Entity id.</param>
            <param name="operationName">Entity operation name.</param>
            <param name="operationInput">Entity input value.</param>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.RequestMessage">
            <summary>
            A message that represents an operation request or a lock request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.RequestMessage.Operation">
            <summary>
            The name of the operation being called (if this is an operation message) or <c>null</c>
            (if this is a lock request).
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.RequestMessage.IsSignal">
            <summary>
            Whether or not this is a one-way message.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.RequestMessage.Input">
            <summary>
            The operation input.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.RequestMessage.Id">
            <summary>
            A unique identifier for this operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.RequestMessage.ParentInstanceId">
            <summary>
            The parent instance that called this operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.RequestMessage.ParentExecutionId">
            <summary>
            The parent instance that called this operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.RequestMessage.ScheduledTime">
            <summary>
            Optionally, a scheduled time at which to start the operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.RequestMessage.Timestamp">
            <summary>
            A timestamp for this request.
            Used for duplicate filtering and in-order delivery.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.RequestMessage.Predecessor">
            <summary>
            A timestamp for the predecessor request in the stream, or DateTime.MinValue if none.
            Used for duplicate filtering and in-order delivery.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.RequestMessage.LockSet">
            <summary>
            For lock requests, the set of locks being acquired. Is sorted,
            contains at least one element, and has no repetitions.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.RequestMessage.Position">
            <summary>
            For lock requests involving multiple locks, the message number.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.SchedulerState">
            <summary>
            The persisted state of an entity scheduler, as handed forward between ContinueAsNew instances.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.SchedulerState.EntityExists">
            <summary>
            Whether this entity exists or not.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.SchedulerState.EntityState">
            <summary>
            The last serialized entity state.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.SchedulerState.Queue">
            <summary>
            The queue of waiting operations, or null if none.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.SchedulerState.LockedBy">
            <summary>
            The instance id of the orchestration that currently holds the lock of this entity.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.SchedulerState.MessageSorter">
            <summary>
            The metadata used for reordering and deduplication of messages sent to entities.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.TypedInvocationExtensions">
            <summary>
            Extends the durable entity context to support reflection-based invocation of entity operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.TypedInvocationExtensions.DispatchAsync``1(Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableEntityContext,System.Object[])">
            <summary>
            Dynamically dispatches the incoming entity operation using reflection.
            </summary>
            <typeparam name="T">The class to use for entity instances.</typeparam>
            <returns>A task that completes when the dispatched operation has finished.</returns>
            <exception cref="T:System.Reflection.AmbiguousMatchException">If there is more than one method with the given operation name.</exception>
            <exception cref="T:System.MissingMethodException">If there is no method with the given operation name.</exception>
            <exception cref="T:System.InvalidOperationException">If the method has more than one argument.</exception>
            <remarks>
            If the entity's state is null, an object of type <typeparamref name="T"/> is created first. Then, reflection
            is used to try to find a matching method. This match is based on the method name
            (which is the operation name) and the argument list (which is the operation content, deserialized into
            an object array).
            </remarks>
            <param name="context">Context object to use to dispatch entity operations.</param>
            <param name="constructorParameters">Parameters to feed to the entity constructor. Should be primarily used for
            output bindings. Parameters must match the order in the constructor after ignoring parameters populated on
            constructor via dependency injection.</param>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.EtwEventSource">
            <summary>
            ETW Event Provider for the WebJobs.Extensions.DurableTask extension.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.FunctionFailedException">
            <summary>
            The exception that is thrown when a sub-orchestrator or activity function fails
            with an error.
            </summary>
            <remarks>
            The `InnerException` property of this instance will contain additional information
            about the failed sub-orchestrator or activity function.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.FunctionFailedException.#ctor(System.String)">
            <summary>
            Initializes a new instance of a <see cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.FunctionFailedException"/>.
            </summary>
            <param name="message">A message describing where to look for more details.</param>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.FunctionFailedException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of a <see cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.FunctionFailedException"/>.
            </summary>
            <param name="message">A message describing where to look for more details.</param>
            <param name="innerException">The exception that caused the function to fail.</param>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.FunctionName">
            <summary>
            The name of a durable function.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.FunctionName.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.FunctionName"/> struct.
            </summary>
            <param name="name">The name of the function.</param>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.FunctionName.Name">
            <summary>
            Gets the name of the function without the version.
            </summary>
            <value>
            The name of the activity function without the version.
            </value>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.FunctionName.op_Equality(Microsoft.Azure.WebJobs.Extensions.DurableTask.FunctionName,Microsoft.Azure.WebJobs.Extensions.DurableTask.FunctionName)">
            <summary>
            Compares two <see cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.FunctionName"/> objects for equality.
            </summary>
            <param name="a">The first <see cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.FunctionName"/> to compare.</param>
            <param name="b">The second <see cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.FunctionName"/> to compare.</param>
            <returns><c>true</c> if the two <see cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.FunctionName"/> objects are equal; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.FunctionName.op_Inequality(Microsoft.Azure.WebJobs.Extensions.DurableTask.FunctionName,Microsoft.Azure.WebJobs.Extensions.DurableTask.FunctionName)">
            <summary>
            Compares two <see cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.FunctionName"/> objects for inequality.
            </summary>
            <param name="a">The first <see cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.FunctionName"/> to compare.</param>
            <param name="b">The second <see cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.FunctionName"/> to compare.</param>
            <returns><c>true</c> if the two <see cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.FunctionName"/> objects are not equal; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.FunctionName.Equals(Microsoft.Azure.WebJobs.Extensions.DurableTask.FunctionName)">
            <summary>
            Gets a value indicating whether to <see cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.FunctionName"/> objects
            are equal using value semantics.
            </summary>
            <param name="other">The other object to compare to.</param>
            <returns><c>true</c> if the two objects are equal using value semantics; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.FunctionName.Equals(System.Object)">
            <summary>
            Gets a value indicating whether to <see cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.FunctionName"/> objects
            are equal using value semantics.
            </summary>
            <param name="other">The other object to compare to.</param>
            <returns><c>true</c> if the two objects are equal using value semantics; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.FunctionName.GetHashCode">
            <summary>
            Calculates a hash code value for the current <see cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.FunctionName"/> instance.
            </summary>
            <returns>A 32-bit hash code value.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.FunctionName.ToString">
            <summary>
            Gets the string value of the current <see cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.FunctionName"/> instance.
            </summary>
            <returns>The name and optional version of the current <see cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.FunctionName"/> instance.</returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.FunctionType">
            <summary>
            The type of a function.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.GuidManager">
            <summary>
            Class for creating deterministic <see cref="T:System.Guid"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.HttpCreationPayload">
            <summary>
            Data structure containing orchestration instance creation HTTP endpoints.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.HttpCreationPayload.CreateNewInstancePostUri">
            <summary>
            Gets the HTTP POST orchestration instance creation endpoint URL.
            </summary>
            <value>
            The HTTP URL for creating a new orchestration instance.
            </value>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.HttpCreationPayload.CreateAndWaitOnNewInstancePostUri">
            <summary>
            Gets the HTTP POST orchestration instance create-and-wait endpoint URL.
            </summary>
            <value>
            The HTTP URL for creating a new orchestration instance and waiting on its completion.
            </value>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.HttpManagementPayload">
            <summary>
            Data structure containing status, terminate and send external event HTTP endpoints.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.HttpManagementPayload.Id">
            <summary>
            Gets the ID of the orchestration instance.
            </summary>
            <value>
            The ID of the orchestration instance.
            </value>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.HttpManagementPayload.StatusQueryGetUri">
            <summary>
            Gets the HTTP GET status query endpoint URL.
            </summary>
            <value>
            The HTTP URL for fetching the instance status.
            </value>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.HttpManagementPayload.SendEventPostUri">
            <summary>
            Gets the HTTP POST external event sending endpoint URL.
            </summary>
            <value>
            The HTTP URL for posting external event notifications.
            </value>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.HttpManagementPayload.TerminatePostUri">
            <summary>
            Gets the HTTP POST instance termination endpoint.
            </summary>
            <value>
            The HTTP URL for posting instance termination commands.
            </value>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.HttpManagementPayload.RewindPostUri">
            <summary>
            Gets the HTTP POST instance rewind endpoint.
            </summary>
            <value>
            The HTTP URL for rewinding orchestration instances.
            </value>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.HttpManagementPayload.PurgeHistoryDeleteUri">
            <summary>
            Gets the HTTP DELETE purge instance history by instance ID endpoint.
            </summary>
            <value>
            The HTTP URL for purging instance history by instance ID.
            </value>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.IApplicationLifetimeWrapper">
            <summary>
            Custom service interface for signaling the extension when the function app is starting up or shutting down.
            </summary>
            <remarks>
            This interface is expected to be used as an injected service. We use a "wrapper" interface instead of
            directly using the "real" <c>IApplicationLifetime</c> interface so that we can have an injected service
            that is available in both .NET Core (Functions 2.0+) and .NET Framework (Functions 1.0).
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.IApplicationLifetimeWrapper.OnStarted">
            <summary>
            Gets a <see cref="T:System.Threading.CancellationToken"/> that can be used to detect function app startup events.
            </summary>
            <value>
            A <see cref="T:System.Threading.CancellationToken"/> that is signalled when the function app has started up.
            </value>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.IApplicationLifetimeWrapper.OnStopping">
            <summary>
            Gets a <see cref="T:System.Threading.CancellationToken"/> that can be used to detect function app stopping events.
            </summary>
            <value>
            A <see cref="T:System.Threading.CancellationToken"/> that is signalled when the function app is beginning to shut down.
            </value>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.IApplicationLifetimeWrapper.OnStopped">
            <summary>
            Gets a <see cref="T:System.Threading.CancellationToken"/> that can be used to detect function app shutdown events.
            </summary>
            <value>
            A <see cref="T:System.Threading.CancellationToken"/> that is signalled when the function app has completed shutting down.
            </value>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.IConnectionStringResolver">
            <summary>
            Interface defining methods to resolve connection strings.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IConnectionStringResolver.Resolve(System.String)">
            <summary>
            Looks up a connection string value given a name.
            </summary>
            <param name="connectionStringName">The name of the connection string.</param>
            <returns>Returns the resolved connection string value.</returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurabilityProviderFactory">
            <summary>
            Interface defining methods to build instances of <see cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurabilityProvider"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurabilityProviderFactory.GetDurabilityProvider">
            <summary>
            Creates or retrieves a durability provider to be used throughout the extension.
            </summary>
            <returns>An durability provider to be used by the Durable Task Extension.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurabilityProviderFactory.GetDurabilityProvider(Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableClientAttribute)">
            <summary>
            Creates or retrieves a cached durability provider to be used in a given function execution.
            </summary>
            <param name="attribute">A durable client attribute with parameters for the durability provider.</param>
            <returns>A durability provider to be used by a client function.</returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableHttpMessageHandlerFactory">
            <summary>
            Interface used for testing Durable HTTP.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableHttpMessageHandlerFactory.CreateHttpMessageHandler">
            <summary>
            Creates an HttpClientHandler and returns it.
            </summary>
            <returns>Returns an HttpClientHandler.</returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.IErrorSerializerSettingsFactory">
            <summary>
            Interface defining methods to build instances of <see cref="T:Newtonsoft.Json.JsonSerializerSettings"/> for error serialization.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IErrorSerializerSettingsFactory.CreateJsonSerializerSettings">
            <summary>
            Creates or retrieves <see cref="T:Newtonsoft.Json.JsonSerializerSettings"/> to be used throughout the extension for error serialization.
            </summary>
            <returns><see cref="T:Newtonsoft.Json.JsonSerializerSettings"/> to be used by the Durable Task Extension for error serialization.</returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.ILifeCycleNotificationHelper">
            <summary>
            Interface defining methods to life cycle notifications.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.ILifeCycleNotificationHelper.OrchestratorStartingAsync(System.String,System.String,System.String,System.Boolean)">
            <summary>
            The orchestrator was starting.
            </summary>
            <param name="hubName">The name of the task hub.</param>
            <param name="functionName">The name of the orchestrator function to call.</param>
            <param name="instanceId">The ID to use for the orchestration instance.</param>
            <param name="isReplay">The orchestrator function is currently replaying itself.</param>
            <returns>A task that completes when the lifecycle notification message has been sent.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.ILifeCycleNotificationHelper.OrchestratorCompletedAsync(System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            The orchestrator was completed.
            </summary>
            <param name="hubName">The name of the task hub.</param>
            <param name="functionName">The name of the orchestrator function to call.</param>
            <param name="instanceId">The ID to use for the orchestration instance.</param>
            <param name="continuedAsNew">The orchestration completed with ContinueAsNew as is in the process of restarting.</param>
            <param name="isReplay">The orchestrator function is currently replaying itself.</param>
            <returns>A task that completes when the lifecycle notification message has been sent.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.ILifeCycleNotificationHelper.OrchestratorFailedAsync(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            The orchestrator was failed.
            </summary>
            <param name="hubName">The name of the task hub.</param>
            <param name="functionName">The name of the orchestrator function to call.</param>
            <param name="instanceId">The ID to use for the orchestration instance.</param>
            <param name="reason">Additional data associated with the tracking event.</param>
            <param name="isReplay">The orchestrator function is currently replaying itself.</param>
            <returns>A task that completes when the lifecycle notification message has been sent.</returns>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.ILifeCycleNotificationHelper.OrchestratorTerminatedAsync(System.String,System.String,System.String,System.String)">
            <summary>
            The orchestrator was terminated.
            </summary>
            <param name="hubName">The name of the task hub.</param>
            <param name="functionName">The name of the orchestrator function to call.</param>
            <param name="instanceId">The ID to use for the orchestration instance.</param>
            <param name="reason">Additional data associated with the tracking event.</param>
            <returns>A task that completes when the lifecycle notification message has been sent.</returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.IMessageSerializerSettingsFactory">
            <summary>
            Interface defining methods to build instances of <see cref="T:Newtonsoft.Json.JsonSerializerSettings"/> for message serialization.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.IMessageSerializerSettingsFactory.CreateJsonSerializerSettings">
            <summary>
            Creates or retrieves <see cref="T:Newtonsoft.Json.JsonSerializerSettings"/> to be used throughout the extension for message serialization.
            </summary>
            <returns><see cref="T:Newtonsoft.Json.JsonSerializerSettings"/> to be used by the Durable Task Extension for message serialization.</returns>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.ITokenSource">
            <summary>
            Implementations of this interface can be used to provide authorization tokens for outbound HTTP requests.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.ITokenSource.GetTokenAsync">
            <summary>
            Gets a token for a resource.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the result of the asynchronous operation.</returns>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskTriggerMetrics.PartitionCount">
            <summary>
            The number of partitions in the task hub.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskTriggerMetrics.ControlQueueLengths">
            <summary>
            The number of messages across control queues. This will
            be in the form of a serialized array of ints, e.g. "[1,2,3,4]".
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskTriggerMetrics.ControlQueueLatencies">
            <summary>
            The latency of messages across control queues. This will
            be in the form of a serialized array of TimeSpans in string
            format, e.g. "["00:00:00.0010000","00:00:00.0020000","00:00:00.0030000","00:00:00.0040000"]".
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskTriggerMetrics.WorkItemQueueLength">
            <summary>
            The number of messages in the work-item queue.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskTriggerMetrics.WorkItemQueueLatency">
            <summary>
            The approximate age of the first work-item queue message. This
            will be a TimeSpan in string format, e.g. "00:00:00.0010000".
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.OutOfProcOrchestrationShim">
            <summary>
            Not intended for public consumption.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.OutOfProcOrchestrationShim.#ctor(Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.OutOfProcOrchestrationShim"/> class.
            </summary>
            <param name="context">The orchestration execution context.</param>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.TaskActivityShim">
            <summary>
            Task activity implementation which delegates the implementation to a function.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.WebJobs.Extensions.DurableTask.TaskActivityShim.taskEventId">
            <summary>
            The DTFx-generated, auto-incrementing ID that uniquely identifies this activity function execution.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.TaskCommonShim">
            <summary>
            Common functionality of <see cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.TaskEntityShim"/> and <see cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.TaskOrchestrationShim"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.TaskEntityShim">
            <summary>
            Implements the entity scheduler as a looping orchestration.
            There is one such orchestration per entity.
            The orchestration terminates if the entity is deleted and idle.
            The orchestration calls ContinueAsNew when it is idle, but not deleted.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.TaskEntityShim.OutOfProcResult">
            <summary>
            The results of executing a batch of operations on the entity out of process.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.TaskEntityShim.OutOfProcResult.EntityExists">
            <summary>
            Whether the entity exists after executing the batch.
            This is false if the last operation in the batch deletes the entity,
            and true otherwise.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.TaskEntityShim.OutOfProcResult.EntityState">
            <summary>
            The state of the entity after executing the batch.
            Should be null if <see cref="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.TaskEntityShim.OutOfProcResult.EntityExists"/> is false.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.TaskEntityShim.OutOfProcResult.Results">
            <summary>
            The results of executing the operations. The length of this list must always match
            the size of the batch, even if there were exceptions.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.TaskEntityShim.OutOfProcResult.Signals">
            <summary>
            The list of signals sent by the entity. Can be empty.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.TaskEntityShim.OutOfProcResult.OperationResult">
            <summary>
            The results of executing an operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.TaskEntityShim.OutOfProcResult.OperationResult.Result">
            <summary>
            The returned value or error/exception.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.TaskEntityShim.OutOfProcResult.OperationResult.IsError">
            <summary>
            Determines whether <see cref="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.TaskEntityShim.OutOfProcResult.OperationResult.Result"/> is a normal result, or an error/exception.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.TaskEntityShim.OutOfProcResult.OperationResult.DurationInMilliseconds">
            <summary>
            The measured duration of this operation's execution, in milliseconds.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.TaskEntityShim.OutOfProcResult.Signal">
            <summary>
            Describes a signal that was emitted by one of the operations in the batch.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.TaskEntityShim.OutOfProcResult.Signal.Target">
            <summary>
            The destination of the signal.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.TaskEntityShim.OutOfProcResult.Signal.Name">
            <summary>
            The name of the operation being signaled.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.TaskEntityShim.OutOfProcResult.Signal.Input">
            <summary>
            The input of the operation being signaled.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.TaskOrchestrationShim">
            <summary>
            Task orchestration implementation which delegates the orchestration implementation to a function.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.ManagedIdentityOptions">
            <summary>
            Configuration options for Managed Identity.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.ManagedIdentityOptions.#ctor(System.Uri,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.ManagedIdentityOptions"/> class.
            </summary>
            <param name="authorityHost">The host of the Azure Active Directory authority.</param>
            <param name="tenantId">The tenant id of the user to authenticate.</param>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.ManagedIdentityOptions.AuthorityHost">
            <summary>
            The host of the Azure Active Directory authority. The default is https://login.microsoftonline.com/.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.ManagedIdentityOptions.TenantId">
            <summary>
            The tenant id of the user to authenticate.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.ManagedIdentityTokenSource">
            <summary>
            Token Source implementation for Azure Managed Identities.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.ManagedIdentityTokenSource.#ctor(System.String,Microsoft.Azure.WebJobs.Extensions.DurableTask.ManagedIdentityOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.ManagedIdentityTokenSource"/> class.
            </summary>
            <param name="resource">
            The Azure Active Directory resource identifier of the web API being invoked.
            For example, <c>https://management.core.windows.net/</c> or <c>https://graph.microsoft.com/</c>.
            </param>
            <param name="options">Optional Azure credential options to use when authenticating.</param>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.ManagedIdentityTokenSource.Resource">
            <summary>
            Gets the Azure Active Directory resource identifier of the web API being invoked.
            For example, <c>https://management.core.windows.net/</c> or <c>https://graph.microsoft.com/</c>.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.ManagedIdentityTokenSource.Options">
            <summary>
            The azure credential options that a user can configure when authenticating.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.ManagedIdentityTokenSource.GetTokenAsync">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.MessagePayloadDataConverter.Serialize(System.Object)">
            <summary>
            JSON-serializes the specified object.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.MessagePayloadDataConverter.Serialize(System.Object,System.Int32)">
            <summary>
            JSON-serializes the specified object and throws a <see cref="T:System.ArgumentException"/> if the
            resulting JSON exceeds the maximum size specified by <paramref name="maxSizeInKB"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.AzureStorageOptions">
            <summary>
            Configuration options for the Azure Storage storage provider.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.AzureStorageOptions.ConnectionStringName">
            <summary>
            Gets or sets the name of the Azure Storage connection string used to manage the underlying Azure Storage resources.
            </summary>
            <remarks>
            If not specified, the default behavior is to use the standard `AzureWebJobsStorage` connection string for all storage usage.
            </remarks>
            <value>The name of a connection string that exists in the app's application settings.</value>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.AzureStorageOptions.ControlQueueBatchSize">
            <summary>
            Gets or sets the number of messages to pull from the control queue at a time.
            </summary>
            <remarks>
            Messages pulled from the control queue are buffered in memory until the internal
            dispatcher is ready to process them.
            </remarks>
            <value>A positive integer configured by the host. The default value is <c>32</c>.</value>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.AzureStorageOptions.PartitionCount">
            <summary>
            Gets or sets the partition count for the control queue.
            </summary>
            <remarks>
            Increasing the number of partitions will increase the number of workers
            that can concurrently execute orchestrator functions. However, increasing
            the partition count can also increase the amount of load placed on the storage
            account and on the thread pool if the number of workers is smaller than the
            number of partitions.
            </remarks>
            <value>A positive integer between 1 and 16. The default value is <c>4</c>.</value>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.AzureStorageOptions.ControlQueueBufferThreshold">
            <summary>
            Gets or set the number of control queue messages that can be buffered in memory
            at a time, at which point the dispatcher will wait before dequeuing any additional
            messages. The default is 256. The maximum value is 1000.
            </summary>
            <remarks>
            Increasing this value can improve orchestration throughput by pre-fetching more
            orchestration messages from control queues. The downside is that it increases the
            possibility of duplicate function executions if partition leases move between app
            instances. This most often occurs when the number of app instances changes.
            </remarks>
            <value>A non-negative integer between 0 and 1000. The default value is <c>256</c>.</value>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.AzureStorageOptions.ControlQueueVisibilityTimeout">
            <summary>
            Gets or sets the visibility timeout of dequeued control queue messages.
            </summary>
            <value>
            A <c>TimeSpan</c> configured by the host. The default is 5 minutes.
            </value>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.AzureStorageOptions.WorkItemQueueVisibilityTimeout">
            <summary>
            Gets or sets the visibility timeout of dequeued work item queue messages.
            </summary>
            <value>
            A <c>TimeSpan</c> configured by the host. The default is 5 minutes.
            </value>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.AzureStorageOptions.TrackingStoreConnectionStringName">
            <summary>
            Gets or sets the name of the Azure Storage connection string to use for the
            durable tracking store (History and Instances tables).
            </summary>
            <remarks><para>
            If not specified, the <see cref="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.AzureStorageOptions.ConnectionStringName"/> connection string
            is used for the durable tracking store.
            </para><para>
            This property is primarily useful when deploying multiple apps that need to share the same
            tracking infrastructure. For example, when deploying two versions of an app side by side, using
            the same tracking store allows both versions to save history into the same table, which allows
            clients to query for instance status across all versions.
            </para></remarks>
            <value>The name of a connection string that exists in the app's application settings.</value>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.AzureStorageOptions.TrackingStoreNamePrefix">
            <summary>
            Gets or sets the name prefix to use for history and instance tables in Azure Storage.
            </summary>
            <remarks>
            This property is only used when <see cref="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.AzureStorageOptions.TrackingStoreConnectionStringName"/> is specified.
            If no prefix is specified, the default prefix value is "DurableTask".
            </remarks>
            <value>The prefix to use when naming the generated Azure tables.</value>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.AzureStorageOptions.FetchLargeMessagesAutomatically">
            <summary>
            Gets or sets whether the extension will automatically fetch large messages in orchestration status
            queries. If set to false, the extension will return large messages as a blob url.
            </summary>
            <value>A boolean indicating whether will automatically fetch large messages .</value>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.AzureStorageOptions.MaxQueuePollingInterval">
            <summary>
            Gets or sets the maximum queue polling interval.
            </summary>
            <value>Maximum interval for polling control and work-item queues.</value>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.AzureStorageOptions.UseLegacyPartitionManagement">
            <summary>
            Determines whether or not to use the old partition management strategy, or the new
            strategy that is more resilient to split brain problems, at the potential expense
            of scale out performance.
            </summary>
            <value>A boolean indicating whether we use the legacy partition strategy. Defaults to true
            but this will change to false once the new partition management strategy is fully tested. </value>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.AzureStorageOptions.ValidateHubName(System.String)">
            <summary>
            Throws an exception if the provided hub name violates any naming conventions for the storage provider.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.AzureStorageOptions.Validate">
            <summary>
            Throws an exception if any of the settings of the storage provider are invalid.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskOptions">
            <summary>
            Configuration options for the Durable Task extension.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskOptions.HttpSettings">
            <summary>
            Settings used for Durable HTTP functionality.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskOptions.HubName">
            <summary>
            Gets or sets default task hub name to be used by all <see cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableClient"/>, <see cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableEntityClient"/>, <see cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationClient"/>,
            <see cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableOrchestrationContext"/>, and <see cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableActivityContext"/> instances.
            </summary>
            <remarks>
            A task hub is a logical grouping of storage resources. Alternate task hub names can be used to isolate
            multiple Durable Functions applications from each other, even if they are using the same storage backend.
            </remarks>
            <value>The name of the default task hub.</value>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskOptions.StorageProvider">
            <summary>
            The section of configuration related to storage providers. If using Azure Storage provider, the schema should match
            <see cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.AzureStorageOptions"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskOptions.Tracing">
            <summary>
            The section of configuration related to tracing.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskOptions.Notifications">
            <summary>
            The section of configuration related to notifications.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskOptions.MaxConcurrentActivityFunctions">
            <summary>
            Gets or sets the maximum number of activity functions that can be processed concurrently on a single host instance.
            </summary>
            <remarks>
            Increasing activity function concurrent can result in increased throughput but can
            also increase the total CPU and memory usage on a single worker instance.
            </remarks>
            <value>
            A positive integer configured by the host. The default value is 10X the number of processors on the current machine.
            </value>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskOptions.MaxConcurrentOrchestratorFunctions">
            <summary>
            Gets or sets the maximum number of orchestrator functions that can be processed concurrently on a single host instance.
            </summary>
            <value>
            A positive integer configured by the host. The default value is 10X the number of processors on the current machine.
            </value>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskOptions.NotificationUrl">
            <summary>
            Gets or sets the base URL for the HTTP APIs managed by this extension.
            </summary>
            <remarks>
            This property is intended for use only by runtime hosts.
            </remarks>
            <value>
            A URL pointing to the hosted function app that responds to status polling requests.
            </value>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskOptions.LocalRpcEndpointEnabled">
            <summary>
            Gets or sets a value indicating whether to enable the local RPC endpoint managed by this extension.
            </summary>
            <remarks>
            The local RPC endpoint is intended to allow out-of-process functions to make direct calls into this
            extension. This is primarily intended to support instance management APIs used by the durable client
            binding. The following values are allowed:
            <list type="table">
              <item>
                <term>null</term>
                <description>(Default) The local RPC endpoint is enabled only for non-.NET function apps.</description>
              </item>
              <item>
                <term>true</term>
                <description>A local RPC endpoint will be enabled and listen at <c>http://127.0.0.1:17071/durabletask/</c>.</description>
              </item>
              <item>
                <term>false</term>
                <description>The local RPC endpoint will be disabled.</description>
              </item>
            </list>
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskOptions.ExtendedSessionsEnabled">
            <summary>
            Gets or sets a flag indicating whether to enable extended sessions.
            </summary>
            <remarks>
            <para>Extended sessions can improve the performance of orchestrator functions by allowing them to skip
            replays when new messages are received within short periods of time.</para>
            <para>Note that orchestrator functions which are extended this way will continue to count against the
            <see cref="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskOptions.MaxConcurrentOrchestratorFunctions"/> limit. To avoid starvation, only half of the maximum
            number of allowed concurrent orchestrator functions can be concurrently extended at any given time.
            The <see cref="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskOptions.ExtendedSessionIdleTimeoutInSeconds"/> property can also be used to control how long an idle
            orchestrator function is allowed to be extended.</para>
            <para>It is recommended that this property be set to <c>false</c> during development to help
            ensure that the orchestrator code correctly obeys the idempotency rules.</para>
            </remarks>
            <value>
            <c>true</c> to enable extended sessions; otherwise <c>false</c>.
            </value>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskOptions.ExtendedSessionIdleTimeoutInSeconds">
            <summary>
            Gets or sets the amount of time in seconds before an idle session times out. The default value is 30 seconds.
            </summary>
            <remarks>
            This setting is applicable when <see cref="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskOptions.ExtendedSessionsEnabled"/> is set to <c>true</c>.
            </remarks>
            <value>
            The number of seconds before an idle session times out.
            </value>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskOptions.MaxOrchestrationActions">
            <summary>
            Gets or sets the maximum number of orchestration actions. The default value is 100,000.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskOptions.OverridableExistingInstanceStates">
            <summary>
             States that will override an existing orchestrator when attempting to start a new orchestrator with the same instance Id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskOptions.EntityMessageReorderWindowInMinutes">
            <summary>
            Gets or sets the time window within which entity messages get deduplicated and reordered.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskOptions.UseGracefulShutdown">
            <summary>
            Preview setting for gracefully shutting down to prevent WebJob shutdowns from failing
            activities or orchestrations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskOptions.RollbackEntityOperationsOnExceptions">
            <summary>
            Controls whether an uncaught exception inside an entity operation should roll back the effects of the operation.
            </summary>
            <remarks>
            The rollback undoes all internal effects of an operation
            (sent signals, and state creation, deletion, or modification).
            However, it does not roll back external effects (such as I/O that was performed).
            This setting can affect serialization overhead: if true, the entity state is serialized
            after each individual operation. If false, the entity state is serialized
            only after an entire batch of operations completes.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskOptions.UseAppLease">
            <summary>
            If true, takes a lease on the task hub container, allowing for only one app to process messages in a task hub at a time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskOptions.AppLeaseOptions">
            <summary>
            If UseAppLease is true, gets or sets the AppLeaaseOptions used for acquiring the lease to start the application.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableTaskOptions.SetDefaultHubName(System.String)">
            <summary>
            Sets HubName to a value that is considered a default value.
            </summary>
            <param name="hubName">TaskHub name that is considered the default.</param>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.EventGridNotificationOptions">
            <summary>
            Configuration of the Event Grid notification options
            for the Durable Task Extension.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.EventGridNotificationOptions.TopicEndpoint">
            <summary>
            Gets or sets the URL of an Azure Event Grid custom topic endpoint.
            When set, orchestration life cycle notification events will be automatically
            published to this endpoint.
            </summary>
            <remarks>
            Azure Event Grid topic URLs are generally expected to be in the form
            https://{topic_name}.{region}.eventgrid.azure.net/api/events.
            </remarks>
            <value>
            The Azure Event Grid custom topic URL.
            </value>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.EventGridNotificationOptions.KeySettingName">
            <summary>
            Gets or sets the name of the app setting containing the key used for authenticating with the Azure Event Grid custom topic at <see cref="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.EventGridNotificationOptions.TopicEndpoint"/>.
            </summary>
            <value>
            The name of the app setting that stores the Azure Event Grid key.
            </value>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.EventGridNotificationOptions.PublishRetryCount">
            <summary>
            Gets or sets the Event Grid publish request retry count.
            </summary>
            <value>The number of retry attempts.</value>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.EventGridNotificationOptions.PublishRetryInterval">
            <summary>
            Gets orsets the Event Grid publish request retry interval.
            </summary>
            <value>A <see cref="T:System.TimeSpan"/> representing the retry interval. The default value is 5 minutes.</value>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.EventGridNotificationOptions.PublishRetryHttpStatus">
            <summary>
            Gets or sets the Event Grid publish request http status.
            </summary>
            <value>A list of HTTP status codes, e.g. 400, 403.</value>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.EventGridNotificationOptions.PublishEventTypes">
            <summary>
            Gets or sets the event types that will be published to Event Grid.
            </summary>
            <value>
            A list of strings. Possible values 'Started', 'Completed', 'Failed', 'Terminated'.
            </value>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.HttpOptions">
            <summary>
            Used for Durable HTTP functionality.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.WebJobs.Extensions.DurableTask.HttpOptions.HttpTaskActivityReservedName">
            <summary>
            Reserved name to know when a TaskActivity should be an HTTP activity.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.HttpOptions.DefaultAsyncRequestSleepTimeMilliseconds">
            <summary>
            Gets or sets the default number of milliseconds between async HTTP status poll requests.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.NotificationOptions">
            <summary>
            Configuration of the notification options
            for the Durable Task Extension.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.NotificationOptions.EventGrid">
            <summary>
            The section of configuration related to Event Grid notifications.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.TraceOptions">
            <summary>
            Configuration of the trace options
            for the Durable Task Extension.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.TraceOptions.TraceInputsAndOutputs">
            <summary>
            Gets or sets a value indicating whether to trace the inputs and outputs of function calls.
            </summary>
            <remarks>
            The default behavior when tracing function execution events is to include the number of bytes in the serialized
            inputs and outputs for function calls. This provides minimal information about what the inputs and outputs look
            like without bloating the logs or inadvertently exposing sensitive information to the logs. Setting
            <see cref="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.TraceOptions.TraceInputsAndOutputs"/> to <c>true</c> will instead cause the default function logging to log
            the entire contents of function inputs and outputs.
            </remarks>
            <value>
            <c>true</c> to trace the raw values of inputs and outputs; otherwise <c>false</c>.
            </value>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.TraceOptions.TraceReplayEvents">
            <summary>
            Gets or sets if logs for replay events need to be recorded.
            </summary>
            <remarks>
            The default value is false, which disables the logging of replay events.
            </remarks>
            <value>
            Boolean value specifying if the replay events should be logged.
            </value>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.OrchestrationClientAttribute">
            <summary>
            Deprecated attribute to bind a function parameter to a <see cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.IDurableClient"/>.
            Here for backwards compatibility. Please use the <see cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.DurableClientAttribute"/> instead.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.OrchestrationRuntimeStatus">
            <summary>
            Represents the possible runtime execution status values for an orchestration instance.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.WebJobs.Extensions.DurableTask.OrchestrationRuntimeStatus.Unknown">
            <summary>
            The status of the orchestration could not be determined.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.WebJobs.Extensions.DurableTask.OrchestrationRuntimeStatus.Running">
            <summary>
            The orchestration is running (it may be actively running or waiting for input).
            </summary>
        </member>
        <member name="F:Microsoft.Azure.WebJobs.Extensions.DurableTask.OrchestrationRuntimeStatus.Completed">
            <summary>
            The orchestration ran to completion.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.WebJobs.Extensions.DurableTask.OrchestrationRuntimeStatus.ContinuedAsNew">
            <summary>
            The orchestration completed with ContinueAsNew as is in the process of restarting.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.WebJobs.Extensions.DurableTask.OrchestrationRuntimeStatus.Failed">
            <summary>
            The orchestration failed with an error.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.WebJobs.Extensions.DurableTask.OrchestrationRuntimeStatus.Canceled">
            <summary>
            The orchestration was canceled.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.WebJobs.Extensions.DurableTask.OrchestrationRuntimeStatus.Terminated">
            <summary>
            The orchestration was terminated via an API call.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.WebJobs.Extensions.DurableTask.OrchestrationRuntimeStatus.Pending">
            <summary>
            The orchestration was scheduled but has not yet started.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.OrchestrationStatusQueryCondition">
            <summary>
            Query condition for searching the status of orchestration instances.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.OrchestrationStatusQueryCondition.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.OrchestrationStatusQueryCondition"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.OrchestrationStatusQueryCondition.RuntimeStatus">
            <summary>
            Return orchestration instances which matches the runtimeStatus.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.OrchestrationStatusQueryCondition.CreatedTimeFrom">
            <summary>
            Return orchestration instances which were created after this DateTime.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.OrchestrationStatusQueryCondition.CreatedTimeTo">
            <summary>
            Return orchestration instances which were created before this DateTime.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.OrchestrationStatusQueryCondition.TaskHubNames">
            <summary>
            Return orchestration instances which matches the TaskHubNames.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.OrchestrationStatusQueryCondition.PageSize">
            <summary>
            Number of records per one request. The default value is 100.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.OrchestrationStatusQueryCondition.ContinuationToken">
            <summary>
            ContinuationToken of the pager.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.OrchestrationStatusQueryCondition.InstanceIdPrefix">
            <summary>
            Return orchestration instances that have this instance id prefix.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.OrchestrationStatusQueryCondition.ShowInput">
            <summary>
            Determines whether the query will include the input of the orchestration.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.OrchestrationStatusQueryResult">
            <summary>
            The status of all orchestration instances with paging for a given query.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.OrchestrationStatusQueryResult.DurableOrchestrationState">
            <summary>
            Gets or sets a collection of statuses of orchestration instances matching the query description.
            </summary>
            <value>A collection of orchestration instance status values.</value>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.OrchestrationStatusQueryResult.ContinuationToken">
            <summary>
            Gets or sets a token that can be used to resume the query with data not already returned by this query.
            </summary>
            <value>A server-generated continuation token or <c>null</c> if there are no further continuations.</value>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.OverridableStates">
            <summary>
            Represents options for different states that an existing orchestrator can be in to be able to be overwritten by
            an attempt to start a new instance with the same instance Id.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.WebJobs.Extensions.DurableTask.OverridableStates.AnyState">
            <summary>
            Option to start a new orchestrator instance with an existing instnace Id when the existing
            instance is in any state.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.WebJobs.Extensions.DurableTask.OverridableStates.NonRunningStates">
            <summary>
            Option to only start a new orchestrator instance with an existing instance Id when the existing
            instance is in a terminated, failed, or completed state.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.PurgeHistoryResult">
            <summary>
            Class to hold statistics about this execution of purge history.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.PurgeHistoryResult.#ctor(System.Int32)">
            <summary>
            Constructor for purge history statistics.
            </summary>
            <param name="instancesDeleted">Number of instances deleted.</param>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.PurgeHistoryResult.InstancesDeleted">
            <summary>
            Gets the number of deleted instances.
            </summary>
            <value>The number of deleted instances.</value>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.RetryOptions">
            <summary>
            Defines retry policies that can be passed as parameters to various operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.RetryOptions.#ctor(System.TimeSpan,System.Int32)">
            <summary>
            Creates a new instance RetryOptions with the supplied first retry and max attempts.
            </summary>
            <param name="firstRetryInterval">Timespan to wait for the first retry.</param>
            <param name="maxNumberOfAttempts">Max number of attempts to retry.</param>
            <exception cref="T:System.ArgumentException">
            The <paramref name="firstRetryInterval"/> value must be greater than <see cref="F:System.TimeSpan.Zero"/>.
            </exception>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.RetryOptions.FirstRetryInterval">
            <summary>
            Gets or sets the first retry interval.
            </summary>
            <value>
            The TimeSpan to wait for the first retries.
            </value>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.RetryOptions.MaxRetryInterval">
            <summary>
            Gets or sets the max retry interval.
            </summary>
            <value>
            The TimeSpan of the max retry interval, defaults to <see cref="F:System.TimeSpan.MaxValue"/>.
            </value>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.RetryOptions.BackoffCoefficient">
            <summary>
            Gets or sets the backoff coefficient.
            </summary>
            <value>
            The backoff coefficient used to determine rate of increase of backoff. Defaults to 1.
            </value>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.RetryOptions.RetryTimeout">
            <summary>
            Gets or sets the timeout for retries.
            </summary>
            <value>
            The TimeSpan timeout for retries, defaults to <see cref="F:System.TimeSpan.MaxValue"/>.
            </value>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.RetryOptions.MaxNumberOfAttempts">
            <summary>
            Gets or sets the max number of attempts.
            </summary>
            <value>
            The maximum number of retry attempts.
            </value>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.RetryOptions.Handle">
            <summary>
            Gets or sets a delegate to call on exception to determine if retries should proceed.
            </summary>
            <value>
            The delegate to handle exception to determie if retries should proceed.
            </value>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.StartOrchestrationArgs">
            <summary>
            Parameters for starting a new instance of an orchestration.
            </summary>
            <remarks>
            This class is primarily intended for use with <c>IAsyncCollector&lt;T&gt;</c>.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.StartOrchestrationArgs.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.StartOrchestrationArgs"/> class.
            </summary>
            <param name="functionName">The name of the orchestrator function to start.</param>
            <param name="input">The JSON-serializeable input for the orchestrator function.</param>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.StartOrchestrationArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.StartOrchestrationArgs"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.StartOrchestrationArgs.FunctionName">
            <summary>
            Gets or sets the name of the orchestrator function to start.
            </summary>
            <value>The name of the orchestrator function to start.</value>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.StartOrchestrationArgs.InstanceId">
            <summary>
            Gets or sets the instance ID to assign to the started orchestration.
            </summary>
            <remarks>
            If this property value is null (the default), then a randomly generated instance ID will be assigned automatically.
            </remarks>
            <value>The instance ID to assign.</value>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.StartOrchestrationArgs.Input">
            <summary>
            Gets or sets the JSON-serializeable input data for the orchestrator function.
            </summary>
            <value>JSON-serializeable input value for the orchestrator function.</value>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.StatusResponsePayload">
            <summary>
            Response for Orchestration Status Query.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.StatusResponsePayload.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.StatusResponsePayload.InstanceId">
            <summary>
            InstanceId.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.StatusResponsePayload.RuntimeStatus">
            <summary>
            Runtime status.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.StatusResponsePayload.Input">
            <summary>
            Input.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.StatusResponsePayload.CustomStatus">
            <summary>
            Custom status.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.StatusResponsePayload.Output">
            <summary>
            Output.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.StatusResponsePayload.CreatedTime">
            <summary>
            Created time value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.StatusResponsePayload.LastUpdatedTime">
            <summary>
            Last updated time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.StatusResponsePayload.HistoryEvents">
            <summary>
            JSON object representing history for an orchestration execution.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.ActivityTriggerAttribute">
            <summary>
            Trigger attribute used for durable activity functions.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.ActivityTriggerAttribute.Activity">
            <summary>
            Gets or sets the name of the activity function.
            </summary>
            <value>
            The name of the activity function or <c>null</c> to use the function name.
            </value>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityTriggerAttribute">
            <summary>
            Trigger attribute used for durable entity functions.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.EntityTriggerAttribute.EntityName">
            <summary>
            Gets or sets the name of the entity.
            </summary>
            <remarks>
            If not specified, the function name is used as the name of the entity.
            </remarks>
            <value>
            The name of the entity or <c>null</c> to use the function name.
            </value>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.OrchestrationTriggerAttribute">
            <summary>
            Trigger attribute used for durable orchestrator functions.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.WebJobs.Extensions.DurableTask.OrchestrationTriggerAttribute.Orchestration">
            <summary>
            Gets or sets the name of the orchestrator function.
            </summary>
            <remarks>
            If not specified, the function name is used as the name of the orchestration.
            </remarks>
            <value>
            The name of the orchestrator function or <c>null</c> to use the function name.
            </value>
        </member>
        <member name="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.WebJobsConnectionStringProvider">
            <summary>
            Connection string provider which resolves connection strings from the WebJobs context.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.WebJobsConnectionStringProvider.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.WebJobs.Extensions.DurableTask.WebJobsConnectionStringProvider"/> class.
            </summary>
            <param name="hostConfiguration">A <see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/> object provided by the WebJobs host.</param>
        </member>
        <member name="M:Microsoft.Azure.WebJobs.Extensions.DurableTask.WebJobsConnectionStringProvider.Resolve(System.String)">
            <inheritdoc />
        </member>
    </members>
</doc>
